{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/aislogo/aislogo.component.css","webpack:///./src/app/aislogo/aislogo.component.html","webpack:///./src/app/aislogo/aislogo.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/changepassword/changepassword.component.css","webpack:///./src/app/changepassword/changepassword.component.html","webpack:///./src/app/changepassword/changepassword.component.ts","webpack:///./src/app/changepassword/changepassword.service.ts","webpack:///./src/app/data/formData.model.ts","webpack:///./src/app/data/formData.service.ts","webpack:///./src/app/dependants/dependants.component.html","webpack:///./src/app/dependants/dependants.component.ts","webpack:///./src/app/education/education.component.html","webpack:///./src/app/education/education.component.ts","webpack:///./src/app/education/education.ts","webpack:///./src/app/education/language.ts","webpack:///./src/app/education/qualification.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/personal/personal.component.html","webpack:///./src/app/personal/personal.component.ts","webpack:///./src/app/result/result.component.html","webpack:///./src/app/result/result.component.ts","webpack:///./src/app/shared/login.service.ts","webpack:///./src/app/shared/profile.service.ts","webpack:///./src/app/spouse/spouse.component.html","webpack:///./src/app/spouse/spouse.component.ts","webpack:///./src/app/work/work.component.html","webpack:///./src/app/work/work.component.ts","webpack:///./src/app/workflow/workflow-guard.service.ts","webpack:///./src/app/workflow/workflow.model.ts","webpack:///./src/app/workflow/workflow.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<div class=\\\"row\\\" style=\\\"margin-top: 15px;\\\">\\n\\t\\t<div class=\\\"col-md-offset-2 col-md-1\\\">\\n\\t\\t\\t<img [src]=\\\"logoPath\\\" class=\\\"img-responsive\\\">\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-md-8 text-left\\\">\\n\\t\\t\\t <h3 class=\\\"brand\\\">ALL INDIA SERVICES (AIS)MEMBERS IN KERALA</h3>\\n\\t\\t\\t\\t<h4>Data Collection Form | Department of General Administration, Government of Kerala</h4>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\t\\n\"","import { Component, OnInit } from '@angular/core';\nimport { environment } from '../../environments/environment';\n@Component({\n  selector: 'app-aislogo',\n  templateUrl: './aislogo.component.html',\n  styleUrls: ['./aislogo.component.css']\n})\nexport class AislogoComponent implements OnInit {\n\n  baseUrl = environment.baseUrl;\n\n  logoPath = '../../' + this.baseUrl + 'assets/images/logo.png'\n  // logoPath = require('../../assets/images/logo.png')\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule }             from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PersonalComponent }    from './personal/personal.component';\nimport { WorkComponent }        from './work/work.component';\nimport { EducationComponent }     from './education/education.component';\nimport { SpouseComponent }      from './spouse/spouse.component';\nimport { DependantsComponent }      from './dependants/dependants.component';\nimport { LoginComponent }      from './login/login.component';\nimport { HomeComponent }      from './home/home.component';\nimport { ChangepasswordComponent }      from './changepassword/changepassword.component';\n\nimport { ResultComponent }      from './result/result.component';\n\nimport { WorkflowGuard }        from './workflow/workflow-guard.service';\nimport { WorkflowService }      from './workflow/workflow.service';\n\n\nexport const appRoutes: Routes = [\n    // 1st Route\n    { path: 'personal',  component: PersonalComponent },\n     // 1st Route\n     { path: 'login',  component: LoginComponent },\n     { path: 'home',  component: HomeComponent },\n    // 2nd Route\n    { path: 'work',  component: WorkComponent },\n    // 3rd Route\n    { path: 'education',  component: EducationComponent },\n    // 4th Route\n    { path: 'spouse',  component: SpouseComponent },\n    // 5th Route\n    { path: 'dependants',  component: DependantsComponent },\n\n    { path: 'changepassword',  component: ChangepasswordComponent },\n    // 6th Route\n    // { path: 'result',  component: ResultComponent, canActivate: [WorkflowGuard] },\n    // 7th Route\n    { path: '',   redirectTo: '/home', pathMatch: 'full' },\n    // 8th Route\n    { path: '**', component: HomeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes, { useHash: false} )],\n  exports: [RouterModule],\n  providers: [WorkflowGuard]\n})\n\nexport class AppRoutingModule {}","module.exports = \"\\n <section>\\n      <router-outlet></router-outlet>\\n</section>\\n<app-footer></app-footer>\"","import { Component, OnInit, Input }   from '@angular/core';\n\nimport { FormDataService }            from './data/formData.service';\n\n@Component ({\n    selector:     'hrms'\n    ,templateUrl: './app.component.html'\n})\n\nexport class AppComponent implements OnInit {\n    title = 'Multi-Step Wizard';\n    @Input() formData;\n    \n    constructor(private formDataService: FormDataService) {\n    }\n\n    ngOnInit() {\n        this.formData = this.formDataService.getFormData();\n        console.log(this.title + ' loaded!');\n    }\n}\n","import { NgModule }           from '@angular/core';\nimport { BrowserModule }      from '@angular/platform-browser';\nimport { FormsModule }        from '@angular/forms';\n\n/* App Root */\nimport { AppComponent }       from './app.component';\nimport { NavbarComponent }    from './navbar/navbar.component';\n\n/* Feature Components */\nimport { PersonalComponent }  from './personal/personal.component';\nimport { WorkComponent }      from './work/work.component';\nimport { EducationComponent }   from './education/education.component';\nimport { DependantsComponent }      from './dependants/dependants.component';\nimport { SpouseComponent }      from './spouse/spouse.component';\nimport { ResultComponent }    from './result/result.component';\n\n/* Routing Module */\nimport { AppRoutingModule }   from './app-routing.module';\n\n/* Shared Service */\nimport { FormDataService }    from './data/formData.service';\nimport { LoginService }       from      './shared/login.service';\nimport { ChangepasswordService }       from      './changepassword/changepassword.service';\nimport { ProfileService }    from './shared/profile.service';\nimport { WorkflowService }    from './workflow/workflow.service';\nimport { FooterComponent } from './footer/footer.component';\nimport { HeaderComponent } from './header/header.component';\nimport { LoginComponent } from './login/login.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeComponent } from './home/home.component';\nimport { AislogoComponent } from './aislogo/aislogo.component';\nimport { ChangepasswordComponent } from './changepassword/changepassword.component';\n@NgModule({\n    imports:      [ BrowserModule, \n                    FormsModule,\n                    AppRoutingModule,\n                    HttpClientModule\n                  ],\n    providers:    [{ provide: FormDataService, useClass: FormDataService },\n                   { provide: WorkflowService, useClass: WorkflowService },\n                   ProfileService,\n                   LoginService,\n                   ChangepasswordService\n                   ],\n\n    declarations: [ AppComponent, NavbarComponent, PersonalComponent, WorkComponent, EducationComponent, ResultComponent, DependantsComponent, SpouseComponent, FooterComponent, HeaderComponent,LoginComponent, HomeComponent, AislogoComponent, ChangepasswordComponent],\n\n    bootstrap:    [ AppComponent ]\n})\n\nexport class AppModule {}","module.exports = \"\"","module.exports = \"<app-header></app-header>\\n<app-aislogo></app-aislogo>\\n<div class=\\\"container\\\">\\n    <div class=\\\"board\\\">\\n        <div class=\\\"tab-content\\\">\\n            <form (ngSubmit)=\\\"OnSubmit(oldPassword.value,newPassword.value)\\\"  #loginForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\n                <div class=\\\"tab-pane fade in active\\\">\\n                  <h6 class=\\\"head text-center\\\">Change Password</h6>\\n                  <br/>\\n                  <div class='row'>\\n                        <div class='col-xs-offset-1 col-xs-10 col-sm-offset-2 col-sm-8 col-md-offset-1 col-md-10 col-lg-offset-1 col-lg-10'>\\n                            <div class=\\\"row\\\">\\n                                <div class='col-md-offset-3 col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"oldPassword\\\">Old Password</label>\\n                                        <input class=\\\"form-control input-md\\\" #oldPassword ngModel required \\n                                            id=\\\"oldPassword\\\" name=\\\"oldPassword\\\" type=\\\"password\\\" placeholder=\\\"oldPassword\\\">   \\n                                        <div *ngIf = \\\"oldPassword?.touched || oldPassword?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf = \\\"oldPassword.errors?.required\\\">Passowrd Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>    \\n                            <div class=\\\"row\\\">\\n                                <div class='col-md-offset-3 col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                          <label class=\\\"control-label\\\" for=\\\"newPassword\\\">Password</label>\\n                                          <input class=\\\"form-control input-md\\\" #newPassword ngModel required    id=\\\"newPassword\\\"\\n                                          name=\\\"newPassword\\\" type=\\\"password\\\" placeholder=\\\"newPassword\\\">\\n\\n                                          <div *ngIf = \\\"newPassword?.touched || newPassword?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                             <div *ngIf = \\\"newPassword.errors?.required\\\">Password Required</div>\\n                                          </div>\\n                                    </div>\\n                                </div>\\n                            </div>    \\n                            <div class=\\\"form-group text-center\\\">\\n                                <button  class=\\\"btn btn-success btn-outline-rounded btn-info\\\" style=\\\"margin:0px 15px 0px 0px;\\\"\\n                                > Change Password\\n                                <span class=\\\"glyphicon glyphicon-arrow-right\\\"></span>\\n                                </button>\\n                            </div>\\n                        </div>\\n                  </div>\\n                </div>\\n            </form>          \\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router }              from '@angular/router';\nimport { ChangepasswordService }     from '../changepassword/changepassword.service';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html',\n  styleUrls: ['./changepassword.component.css']\n})\nexport class ChangepasswordComponent implements OnInit {\n\n  constructor(private router: Router, private _changePasswordService:ChangepasswordService) { }\n\n  ngOnInit() {\n  \tconst id = sessionStorage.getItem('userId');\n        if(!id){\n           this.router.navigate(['/login']); \n        }\n    }\n\n    OnSubmit(oldPassword,newPassword){\n       const passwords:any = {};\n       passwords.oldPassword = oldPassword;\n       passwords.newPassword = newPassword;\n       this._changePasswordService.changePassword(passwords).subscribe(\n\n              response =>{\n              \t  alert(\"PASSWORD SUCCESSFULLY CHANGED\");\n                  this.router.navigate(['/home']); \n                  \n              },\n              err => {\n                  alert(\"Invalid Current Password\");\n              }\n          )\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\n@Injectable()\nexport class ChangepasswordService {\n   baseUrl = environment.baseUrl\n\tprivate API_URL: string = `${this.baseUrl}/api`;\n\t// private headers = new HttpHeaders().set('Content-Type','application/json');\n\n  constructor(private http:HttpClient) { }\n\n  initRequestOptions() {\n        let token = sessionStorage.getItem('token');\n        let headers = {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'access_token': token\n        };\n        let headersConfig = new HttpHeaders(headers);\n        return headersConfig\n    }\n\n   changePassword(passwords) {\n   \t    let options = this.initRequestOptions(); \n     \treturn this.http.post(`${this.API_URL}/users/userChangePassword`, passwords, {headers:options} );\n     }\n\n}\n","export class FormData {\n    //personal\n    fullName: string = '';\n    userPrefix : string = '';\n    dateOfBirth: string = '';\n    aadhaarNumber: string = '';\n    penNumber: string = '';\n    email: string = '';\n    mobile: string = '';\n    gender:string = '';\n    maritialStatus:string='';\n    //dependants\n    childFullName: string = '';\n    childGender : string = '';\n    childRelation: string = '';\n    childDateOfBirth: string = '';\n    childEmploy: string = '';\n    childAis: string = '';\n    parentFullName: string = '';\n    parentRelation: string = '';\n    parentDateOfBirth: string = '';\n    parentEmploy: string = '';\n    parentAis: string = '';\n    childService:string='';\n    childCadre:string='';\n    childBatch:string='';\n    childDateOfAllotment:string='';\n    childIdentityNumber:string='';   \n    parentService:string='';\n    parentCadre:string='';\n    parentBatch:string='';\n    parentDateOfAllotment:string='';\n    parentIdentityNumber:string='';\n    othersFullName: string = '';\n    othersGender: string = '';\n    othersRelation: string = '';\n    othersDateOfBirth: string = '';\n    othersEmploy: string = '';\n    othersService: string=''; \n    othersCadre: string='';\n    othersBatch: string='';\n    othersDateOfAllotment: string='';\n    othersIdentityNumber: string='';\n    //work\n    workService: string = '';\n    cadre: string = '';\n    batch: string = '';\n    dateOfAllotment: string = '';\n    identityNumber: string = '';\n    modeOfRecruitment: string = '';\n    domicile: string = '';\n    motherTongue: string = '';\n    scaleOfPay: string = '';\n    position: string = '';\n    nameOfPost: string = '';\n    nameOfPostCentral: string = '';\n    officeFaxStateEx:string='';\n    departmentOrPsu: string = '';\n    pinCode: string = '';\n    pinCodeCentral: string = '';\n    officeTel: string = '';\n    officeTelCentral: string = '';\n    workEmail: string = '';\n    workMobile: string = '';\n    officeFax: string = '';\n    residencePh: string = '';\n    residenceAddress: string = '';\n    startCentralDeputation: string = '';\n    ministryOrDepartmentOrPsu: string = '';\n    nameOfTraining: string = '';\n    trainingDuration: string = '';\n    trainingPlace: string = '';\n    dateOfStartingLeave: string = '';\n    //spouse\n    spousePrefix: string='';\n    spouseFullName: string='';\n    spouseGender: string='';\n    spouseDateOfBirth: string='';\n    spouseAdhaarNumber: string='';\n    spouseNationality: string='';\n    spouseEmail: string='';\n    spousePhoto: string='';\n    spouseEmployment: string='';\n    spouseConstitutionalPost:string='';\n    spouseEmploymentType: string='';\n    spouseService: string='';\n    spouseCadre: string='';\n    spouseBatch: string='';\n    spouseDateOfAllotment: string='';\n    spouseIdentityNumber: string='';\n    spousePost: string='';\n    spouseMinistry: string='';\n    spouseDepartment: string='';\n    spouseOrganization: string='';\n    spousePostState: string='';\n    spouseMinistryState: string='';\n    spouseDepartmentState: string='';\n    spouseOrganizationState: string='';\n    //Education\n    eduqualification:string='';\n    university:string='';\n    institute:string='';\n    subject:string='';\n    division:string='';\n    userCv:string='';\n    year:string='';\n    language:string='';\n    read:string='';\n    write:string='';\n    speak:string='';\n    understand:string='';\n    mothertounge:string='';\n\n    clear() {\n        //personal\n        this.fullName = '';\n        this.userPrefix = '';\n        this.dateOfBirth = '';\n        this.aadhaarNumber = '';\n        this.penNumber = '';\n        this.email = '';\n        this.mobile = '';\n        this.gender = '';\n        this.maritialStatus='';\n        //dependants\n        this.childFullName = '';\n        this.childGender = '';\n        this.childRelation = '';\n        this.childDateOfBirth = '';\n        this.childEmploy = '';\n        this.childAis = '';\n        this.parentFullName = '';\n        this.parentRelation = '';\n        this.parentDateOfBirth = '';\n        this.parentEmploy = '';\n        this.parentAis = '';\n        this.childService='';\n        this.childCadre='';\n        this.childBatch='';\n        this.childDateOfAllotment='';\n        this.childIdentityNumber='';\n        this.othersFullName = '';\n        this.othersGender  = '';\n        this.othersRelation = '';\n        this.othersDateOfBirth = '';\n        this.othersEmploy = '';\n        this.othersService=''; \n        this.othersCadre='';\n        this.othersBatch='';\n        this.othersDateOfAllotment='';\n        this.othersIdentityNumber='';\n        //work\n        this.workService = '';\n        this.cadre  = '';\n        this.batch = '';\n        this.dateOfAllotment = '';\n        this.identityNumber = '';\n        this.modeOfRecruitment = '';\n        this.domicile = '';\n        this.motherTongue = '';\n        this.scaleOfPay = '';\n        this.position = '';\n        this.nameOfPost = '';\n        this.nameOfPostCentral = '';\n        this.departmentOrPsu = '';\n        this.pinCode = '';\n        this.pinCodeCentral = '';\n        this.officeTel = '';\n        this.officeTelCentral = '';\n        this.workMobile = '';\n        this.workEmail = '';\n        this.officeFax = '';\n        this.nameOfTraining = '';\n        this.residencePh = '';\n        this.residenceAddress = '';\n        this.startCentralDeputation = '';\n        this.ministryOrDepartmentOrPsu = '';\n        this.nameOfTraining = '';\n        this.trainingDuration = '';\n        this.trainingPlace = '';\n        this.dateOfStartingLeave = '';\n        //spouse\n        this.spousePrefix = '';\n        this.spouseFullName = '';\n        this.spouseGender = '';\n        this.spouseDateOfBirth = '';\n        this.spouseAdhaarNumber = '';\n        this.spouseNationality = '';\n        this.spouseEmail = '';\n        this.spousePhoto = '';\n        this.spouseEmployment = '';\n        this.spouseEmploymentType = '';\n        this.spouseConstitutionalPost ='';\n        this.spouseService = '';\n        this.spouseCadre = '';\n        this.spouseBatch = '';\n        this.spouseDateOfAllotment = '';\n        this.spouseIdentityNumber = '';\n        this.spousePost = '';\n        this.spouseMinistry = '';\n        this.spouseOrganization = '';\n        this.spouseDepartment = '';\n        this.spousePostState = '';\n        this.spouseMinistryState = '';\n        this.spouseDepartmentState = '';\n        this.spouseOrganizationState = '';\n    //Education\n    this.eduqualification='';\n    this.university='';\n    this.institute='';\n    this.subject='';\n    this.division='';\n    this.year='';\n    this.userCv='';\n    this.language='';\n    this.read='';\n    this.write='';\n    this.speak='';\n    this.understand='';\n    this.mothertounge='';\n\n    }\n}\nexport class Personal {\n    fullName: string = '';\n    userPrefix : string = '';\n    dateOfBirth: string = '';\n    aadhaarNumber: string = '';\n    penNumber: string = '';\n    email: string = '';\n    mobile: string = '';\n    gender:string = '';\n    maritialStatus:string='';\n}\n\nexport class Work {\n   workService: string = '';\n   cadre: string = '';\n   batch: string = '';\n   dateOfAllotment: string = '';\n   identityNumber: string = '';\n   modeOfRecruitment: string = '';\n   specialPay: string = '';\n   state: string = '';\n   district: string = '';\n   hometown: string = '';\n   // motherTongue: string = '';\n   scaleOfPay: string = '';\n   position: string = '';\n   nameOfPost: string = '';\n   nameOfPostCentral: string = '';\n   departmentOrPsu: string = '';\n   pinCode: string = '';\n   pinCodeCentral: string = '';\n   workEmail:string = '';\n   workMobile:string = '';\n   residencePh:string = '';\n   officeTel: string = '';\n   residenceAddress:string = '';\n   officeTelCentral: string = '';\n   emailCentral: string = '';\n   mobileCentral: string = '';\n   officeFaxCentral: string = '';\n   officeFaxStateEx: string = '';\n   startCentralDeputation: string = '';\n   ministryOrDepartmentOrPsu: string = '';\n   residencePhCentral: string = '';\n   residenceAddressCentral: string = '';\n   nameOfTraining: string = '';\n   trainingDuration: string = '';\n   trainingPlace: string = '';\n   dateOfStartingLeave: string = '';\n}\nexport class Dependants {\n    childFullName: string = '';\n    childGender: string = '';\n    childRelation: string = '';\n    childDateOfBirth: string = '';\n    childEmploy: string = '';\n    childAis: string = '';\n    childService:string='';\n    childCadre:string='';\n    childBatch:string='';\n    childDateOfAllotment:string='';\n    childIdentityNumber:string='';\n    parentFullName:string='';\n    parentRelation:string='';\n    parentDateOfBirth:string='';\n    parentEmploy:string='';\n    parentAis:string='';\n    parentService:string='';\n    parentCadre:string='';\n    parentBatch:string='';\n    parentDateOfAllotment:string='';\n    parentIdentityNumber:string='';\n    othersFullName: string = '';\n    othersGender: string = '';\n    othersRelation: string = '';\n    othersDateOfBirth: string = '';\n    othersEmploy: string = '';\n    othersService: string=''; \n    othersCadre: string='';\n    othersBatch: string='';\n    othersDateOfAllotment: string='';\n    othersIdentityNumber: string='';\n}\nexport class Spouse{\n    spousePrefix: string='';\n    spouseFullName: string='';\n    spouseGender: string='';\n    spouseDateOfBirth: string='';\n    spouseAdhaarNumber: string='';\n    spouseNationality: string='';\n    spouseEmail: string='';\n    spouseMobile: string='';\n    spousePhoto: string='';\n    spouseEmployment: string='';\n    spouseEmploymentType: string='';\n    spouseConstitutionalPost:string='';\n    spouseService: string='';\n    spouseCadre: string='';\n    spouseBatch: string='';\n    spouseDateOfAllotment: string='';\n    spouseIdentityNumber: string='';\n    spousePost: string='';\n    spouseMinistry: string='';\n    spouseDepartment: string='';\n    spouseOrganization: string='';\n    spouseIdentityNumberRetired:string = '';\n    spousePostState: string='';\n    spouseMinistryState: string='';\n    spouseDepartmentState: string='';\n    spouseOrganizationState: string='';\n    spousePen: string='';\n}\n","import { Injectable } from '@angular/core';\nimport { FormData, Personal, Spouse, Dependants } from './formData.model';\nimport { WorkflowService } from '../workflow/workflow.service';\nimport { STEPS }  from '../workflow/workflow.model';\n\n@Injectable()\nexport class FormDataService {\n\n    private formData: FormData = new FormData();\n    private isPersonalFormValid: boolean = false;\n    private isWorkFormValid: boolean = false;\n    private isEducationFormValid: boolean = false;\n    private isSpouseFormValid: boolean = false;\n    private isDependantsFormValid: boolean = false;\n\n    constructor(private workflowService: WorkflowService) { \n    }\n\n    getPersonal(): Personal {\n        // Return the Personal data\n        var personal: Personal = {\n            fullName: this.formData.fullName,\n            userPrefix: this.formData.userPrefix,\n            dateOfBirth: this.formData.dateOfBirth,\n            aadhaarNumber: this.formData.aadhaarNumber,\n            penNumber: this.formData.penNumber,\n            email: this.formData.email,\n            mobile: this.formData.mobile,\n            gender:this.formData.gender,\n            maritialStatus:this.formData.maritialStatus\n        };\n        return personal;\n    }\n\n    setPersonal(data: Personal) {\n        // Update the Personal data only when the Personal Form had been validated successfully\n        this.isPersonalFormValid = true;\n        this.formData.fullName = data.fullName;\n        this.formData.userPrefix = data.userPrefix;\n        this.formData.dateOfBirth = data.dateOfBirth;\n        this.formData.aadhaarNumber = data.aadhaarNumber;\n        this.formData.penNumber = data.penNumber;\n        this.formData.email = data.email;\n        this.formData.mobile = data.mobile;\n        this.formData.gender = data.gender;\n        this.formData.maritialStatus=data.maritialStatus;\n        // Validate Personal Step in Workflow\n        this.workflowService.validateStep(STEPS.personal);\n    }\n\n\n    // getWork(): Work {\n    //     // Return the Personal data\n    //     var work: Work = {\n    //         workService: this.formData.workService,\n    //         cadre: this.formData.cadre,\n    //         batch: this.formData.batch,\n    //         dateOfAllotment: this.formData.dateOfAllotment,\n    //         identityNumber: this.formData.identityNumber,\n    //         modeOfRecruitment: this.formData.modeOfRecruitment,\n    //         domicile: this.formData.domicile,\n    //         motherTongue: this.formData.motherTongue,\n    //         scaleOfPay: this.formData.scaleOfPay,\n    //         position: this.formData.position,\n    //         nameOfPost: this.formData.nameOfPost,\n    //         nameOfPostCentral: this.formData.nameOfPostCentral,\n    //         pinCodeCentral: this.formData.pinCodeCentral,\n    //         officeTelCentral: this.formData.officeTelCentral,\n    //         officeFaxStateEx: this.formData.officeFaxStateEx,\n    //         departmentOrPsu: this.formData.departmentOrPsu,\n    //         pinCode: this.formData.pinCode,\n    //         officeTel: this.formData.officeTel,\n    //         workEmail: this.formData.workEmail,\n    //         workMobile: this.formData.workMobile,\n    //         officeFax: this.formData.officeFax,\n    //         residencePh: this.formData.residencePh,\n    //         residenceAddress: this.formData.residenceAddress,\n    //         startCentralDeputation: this.formData.startCentralDeputation,\n    //         ministryOrDepartmentOrPsu: this.formData.ministryOrDepartmentOrPsu,\n    //         nameOfTraining: this.formData.nameOfTraining,\n    //         trainingDuration: this.formData.trainingDuration,\n    //         trainingPlace: this.formData.trainingPlace,\n    //         dateOfStartingLeave: this.formData.dateOfStartingLeave\n    //     };\n    //     return work;\n    // }\n\n    // setWork(data: Work) {\n    //     // Update the Work data only when the Work Form had been validated successfully\n    //     this.isWorkFormValid = true;\n    //     this.formData.workService = data.workService;\n    //     this.formData.cadre  = data.cadre;\n    //     this.formData.batch = data.batch;\n    //     this.formData.dateOfAllotment = data.dateOfAllotment;\n    //     this.formData.identityNumber = data.identityNumber;\n    //     this.formData.modeOfRecruitment = data.modeOfRecruitment;\n    //     this.formData.domicile = data.domicile;\n    //     this.formData.motherTongue = data.motherTongue;\n    //     this.formData.scaleOfPay = data.scaleOfPay;\n    //     this.formData.position = data.position;\n    //     this.formData.nameOfPost = data.nameOfPost;\n    //     this.formData.nameOfPostCentral=data.nameOfPostCentral,\n    //     this.formData.pinCodeCentral=data.pinCodeCentral,\n    //     this.formData.officeTelCentral=data.officeTelCentral,\n    //     this.formData.officeFaxStateEx=data.officeFaxStateEx,\n    //     this.formData.departmentOrPsu = data.departmentOrPsu;\n    //     this.formData.pinCode = data.pinCode;\n    //     this.formData.officeTel = data.officeTel;\n    //     this.formData.workEmail = data.workEmail;\n    //     this.formData.workMobile = data.workMobile;\n    //     this.formData.officeFax = data.officeFax;\n    //     this.formData.residencePh = data.residencePh;\n    //     this.formData.residenceAddress = data.residenceAddress;\n    //     this.formData.startCentralDeputation = data.startCentralDeputation;\n    //     this.formData.ministryOrDepartmentOrPsu = data.ministryOrDepartmentOrPsu;\n    //     this.formData.nameOfTraining = data.nameOfTraining;\n    //     this.formData.trainingDuration = data.trainingDuration;\n    //     this.formData.trainingPlace = data.trainingPlace;\n    //     this.formData.dateOfStartingLeave = data.dateOfStartingLeave;\n    //     this.workflowService.validateStep(STEPS.work);\n    // }\n\n    // getSpouse(): Spouse {\n    //     // Return the Personal data\n    //     var spouse: Spouse = {\n    //         spousePrefix: this.formData.spousePrefix,\n    //         spouseFullName: this.formData.spouseFullName,\n    //         spouseGender: this.formData.spouseGender,\n    //         spouseDateOfBirth: this.formData.spouseDateOfBirth,\n    //         spouseAdhaarNumber: this.formData.spouseAdhaarNumber,\n    //         spouseNationality: this.formData.spouseNationality,\n    //         spouseEmail: this.formData.spouseEmail,\n    //         spousePhoto: this.formData.spousePhoto,\n    //         spouseEmployment: this.formData.spouseEmployment,\n    //         spouseEmploymentType: this.formData.spouseEmploymentType,\n    //         spouseConstitutionalPost:this.formData.spouseConstitutionalPost,\n    //         spouseService: this.formData.spouseService,\n    //         spouseCadre: this.formData.spouseCadre,\n    //         spouseBatch: this.formData.spouseBatch,\n    //         spouseDateOfAllotment: this.formData.spouseDateOfAllotment,\n    //         spouseIdentityNumber: this.formData.spouseIdentityNumber,\n    //         spousePost: this.formData.spousePost,\n    //         spouseMinistry: this.formData.spouseMinistry,\n    //         spouseDepartment: this.formData.spouseDepartment,\n    //         spouseOrganization: this.formData.spouseOrganization,\n    //         spousePostState: this.formData.spousePostState,\n    //         spouseMinistryState: this.formData.spouseMinistryState,\n    //         spouseDepartmentState: this.formData.spouseDepartmentState,\n    //         spouseOrganizationState: this.formData.spouseOrganizationState        \n                 \n    //     };\n    //     return spouse;\n    // }\n\n    // setSpouse(data: Spouse) {\n    //     // Update the Spouse data only when the Spouse Form had been validated successfully\n    //     this.isSpouseFormValid = true;\n       \n    //     this.formData.spousePrefix = data.spousePrefix;\n    //     this.formData.spouseFullName =data.spouseFullName;\n    //     this.formData.spouseGender =data.spouseGender;\n    //     this.formData.spouseDateOfBirth =data.spouseDateOfBirth;\n    //     this.formData.spouseAdhaarNumber =data.spouseAdhaarNumber;\n    //     this.formData.spouseNationality =data.spouseNationality;\n    //     this.formData.spouseEmail =data.spouseEmail;\n    //     this.formData.spousePhoto =data.spousePhoto;\n    //     this.formData.spouseEmployment =data.spouseEmployment;\n    //     this.formData.spouseEmploymentType =data.spouseEmploymentType;\n    //     this.formData.spouseConstitutionalPost =data.spouseConstitutionalPost;\n    //     this.formData.spouseService =data.spouseService;\n    //     this.formData.spouseCadre =data.spouseCadre;\n    //     this.formData.spouseBatch =data.spouseBatch;\n    //     this.formData.spouseDateOfAllotment =data.spouseDateOfAllotment;\n    //     this.formData.spouseIdentityNumber =data.spouseIdentityNumber;\n    //     this.formData.spousePost =data.spousePost;\n    //     this.formData.spouseMinistry =data.spouseMinistry;\n    //     this.formData.spouseOrganization =data.spouseOrganization;\n    //     this.formData.spouseDepartment =data.spouseDepartment;\n    //     this.formData.spousePostState =data.spousePostState;\n    //     this.formData.spouseMinistryState =data.spouseMinistryState;\n    //     this.formData.spouseDepartmentState =data.spouseDepartmentState;\n    //     this.formData.spouseOrganizationState =data.spouseOrganizationState;\n\n    //     this.workflowService.validateStep(STEPS.spouse);\n    // }\n\n    // getDependants(): Dependants {\n    //     // Return the Personal data\n    //     var dependants: Dependants = {\n    //         childFullName: this.formData.childFullName,\n    //         childGender: this.formData.childGender,\n    //         childRelation: this.formData.childRelation,\n    //         childDateOfBirth: this.formData.childDateOfBirth,\n    //         childEmploy: this.formData.childEmploy,\n    //         childAis: this.formData.childAis,\n    //         parentFullName: this.formData.parentFullName,\n    //         parentRelation: this.formData.parentRelation,\n    //         parentDateOfBirth: this.formData.parentDateOfBirth,\n    //         parentEmploy: this.formData.parentEmploy,\n    //         parentAis: this.formData.parentAis,\n    //         othersFullName: this.formData.othersFullName,\n    //         othersGender: this.formData.othersGender,\n    //         othersRelation: this.formData.othersRelation,\n    //         othersDateOfBirth: this.formData.othersDateOfBirth,\n    //         othersEmploy: this.formData.othersEmploy\n    //     };\n    //     return dependants;\n    // }\n\n    // setDependants(data: Dependants) {\n    //     // Update the Dependants data only when the Dependants Form had been validated successfully\n    //     this.isDependantsFormValid = true;\n    //     this.formData.childFullName = data.childFullName;\n    //     this.formData.childGender = data.childGender;\n    //     this.formData.childRelation = data.childRelation;\n    //     this.formData.childDateOfBirth = data.childDateOfBirth;\n    //     this.formData.childEmploy = data.childEmploy;\n    //     this.formData.childAis = data.childAis;\n\n    //     this.formData.parentFullName = data.parentFullName;\n    //     this.formData.parentRelation = data.parentRelation;\n    //     this.formData.parentDateOfBirth = data.parentDateOfBirth;\n    //     this.formData.parentEmploy = data.parentEmploy;\n    //     this.formData.parentAis = data.parentAis;\n\n    //     this.formData.othersFullName = data.othersFullName;\n    //     this.formData.othersGender = data.othersGender;\n    //     this.formData.othersRelation = data.othersRelation;\n    //     this.formData.othersDateOfBirth = data.othersDateOfBirth;\n    //     this.formData.othersEmploy = data.othersEmploy;\n    //     this.workflowService.validateStep(STEPS.dependants);\n    // }\n\n    // getEducation() : Education {\n    //     // Return the Education data\n    //     var education: Education = {\n           \n    //             eduqualification: this.formData.eduqualification,\n    //             university: this.formData.university,\n    //             institute: this.formData.institute,\n    //             subject: this.formData.subject,\n    //             division: this.formData.division,\n    //             year: this.formData.year,\n    //             userCv: this.formData.userCv,\n    //             language:this.formData.language,\n    //             read: this.formData.read,\n    //             write: this.formData.write,\n    //             speak: this.formData.speak,\n    //             understand: this.formData.understand\n    //     };\n    //     return education;\n    // }\n\n    // setEducation(data: Education) {\n    //     // Update the Education data only when the Education Form had been validated successfully\n    //     this.isEducationFormValid = true;\n       \n    //     this.formData.eduqualification = data.eduqualification;\n    //     this.formData.university = data.university;\n    //     this.formData.institute = data.institute;\n    //     this.formData.subject = data.subject;\n    //     this.formData.division = data.division;\n    //     this.formData.year = data.year;\n    //     this.formData.userCv = data.userCv;\n    //     this.formData.language=data.language;\n    //     this.formData.read = data.read;\n    //     this.formData.write = data.write;\n    //     this.formData.speak = data.speak;\n    //     this.formData.understand = data.understand;\n       \n    //     this.workflowService.validateStep(STEPS.education);\n    // }\n\n    getFormData(): FormData {\n        // Return the entire Form Data\n        return this.formData;\n    }\n\n    resetFormData(): FormData {\n        // Reset the workflow\n        this.workflowService.resetSteps();\n        // Return the form data after all this.* members had been reset\n        this.formData.clear();\n        this.isPersonalFormValid = this.isWorkFormValid = this.isEducationFormValid = this.isSpouseFormValid = this.isDependantsFormValid = false;\n        return this.formData;\n    }\n\n    isFormValid() {\n        // Return true if all forms had been validated successfully; otherwise, return false\n        return this.isPersonalFormValid &&\n                this.isWorkFormValid &&\n                this.isSpouseFormValid &&\n                this.isDependantsFormValid &&\n                this.isEducationFormValid;\n    }\n}\n","module.exports = \"<app-header></app-header>\\n<app-aislogo></app-aislogo>\\n<div class=\\\"container\\\">\\n    <div class=\\\"board\\\">\\n        <div class=\\\"tab-content\\\">\\n            <msw-navbar></msw-navbar>\\n            <form #dependantsForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\n                <div class=\\\"tab-pane fade in active\\\">\\n                    <h6 class=\\\"head text-center\\\">{{title}}</h6>\\n                    <br/>\\n                    <div class='row'>\\n                        <div class='col-xs-offset-1 col-xs-10 col-sm-offset-2 col-sm-8 col-md-offset-1 col-md-10 col-lg-offset-1 col-lg-10'>\\n\\n\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <div class=\\\"panel-group\\\" id=\\\"accordion\\\" role=\\\"tablist\\\" aria-multiselectable=\\\"true\\\">\\n                                        <div class=\\\"panel panel-default\\\">\\n                                            <div class=\\\"panel-heading\\\" role=\\\"tab\\\" id=\\\"headingOne\\\">\\n                                                <h4 class=\\\"panel-title\\\">\\n                                                    <a class=\\\"collapsed\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#collapseOne\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseOne\\\">\\n                                                        Children Info\\n                                                    </a>\\n                                                </h4>\\n                                            </div>\\n\\n                                            <div id=\\\"collapseOne\\\" class=\\\"panel-collapse collapse\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"headingOne\\\">\\n                                                <div class=\\\"panel-body\\\">\\n                                                    <div class=\\\"row clearfix text-center\\\">\\n                                                        <div class=\\\"form-group\\\">\\n                                                            <input id=\\\"image\\\" type=\\\"file\\\" name=\\\"profile_photo\\\" placeholder=\\\"Photo\\\" class=\\\"profilePicEditorClass\\\" id=\\\"file\\\" (change)=\\\"handleFileInput($event)\\\">\\n                                                            <!-- <img src=\\\"../../assets/images/Avatar.jpg\\\" class=\\\"img-circle\\\" alt=\\\"car\\\" width=\\\"150\\\" height=\\\"130\\\"> -->\\n                                                            <img src=\\\"{{childImg_url}}\\\" class=\\\"img-circle\\\" alt=\\\"profile\\\" width=\\\"150\\\" height=\\\"130\\\">\\n                                                        </div>\\n                                                    </div>\\n\\n                                                    <div class='row'>\\n                                                        <div class='col-xs-12 col-sm-12 col-md-4 col-lg-4 '>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"childFullName\\\">Full Name</label>\\n                                                                <input class=\\\"form-control input-md\\\" #childFullName=\\\"ngModel\\\" required id=\\\"childFullName\\\" name=\\\"childFullName\\\" type=\\\"text\\\"\\n                                                                    placeholder=\\\"Full Name\\\" [(ngModel)]=\\\"dependants.childFullName\\\">\\n                                                                <div *ngIf=\\\"childFullName?.touched || childFullName?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"childFullName.errors?.required\\\">Name Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                        <div class='col-xs-12 col-sm-12 col-md-4 col-lg-4 '>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"childGender\\\">Gender</label>\\n                                                                <select class=\\\"form-control input-md\\\" required id=\\\"childGender\\\" required name=\\\"childGender\\\" #childGender=\\\"ngModel\\\" [(ngModel)]=\\\"dependants.childGender\\\">\\n\\n                                                                    <option value=\\\"\\\" disabled>Select Option</option>\\n                                                                    <option *ngFor=\\\"let gen of Gender\\\" [id]=\\\"gen.id\\\" [value]=\\\"gen.gender\\\">{{gen.gender}}</option>\\n\\n                                                                </select>\\n                                                                <div *ngIf=\\\"childGender?.touched || childGender?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"childGender.errors?.required\\\">Gender Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                        <div class='col-xs-12 col-sm-12 col-md-4 col-lg-4 '>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"childRelation\\\">Relation</label>\\n                                                                <input class=\\\"form-control input-md\\\" #childRelation=\\\"ngModel\\\" required id=\\\"childRelation\\\" name=\\\"childRelation\\\" type=\\\"text\\\"\\n                                                                    placeholder=\\\"Relation\\\" [(ngModel)]=\\\"dependants.childRelation\\\">\\n                                                                <div *ngIf=\\\"childRelation?.touched || childRelation?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"childRelation.errors?.required\\\">Relation Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"row\\\">\\n                                                        <div class='col-xs-12 col-sm-12 col-md-4 col-lg-4 '>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"childDateOfBirth\\\">Date Of Birth</label>\\n                                                                <input class=\\\"form-control input-md\\\" #childDateOfBirth=\\\"ngModel\\\" required id=\\\"childDateOfBirth\\\" name=\\\"childDateOfBirth\\\" type=\\\"date\\\"\\n                                                                    placeholder=\\\"Date Of Birth\\\" [(ngModel)]=\\\"dependants.childDateOfBirth\\\">\\n                                                                <div *ngIf=\\\"childDateOfBirth?.touched || childDateOfBirth?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"childDateOfBirth.errors?.required\\\">Valid Date Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                        <div class='col-xs-12 col-sm-12 col-md-4 col-lg-4 '>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"childEmploy\\\">Employed or Not</label>\\n                                                                <select class=\\\"form-control input-md\\\" id=\\\"childEmploy\\\" required name=\\\"childEmploy\\\" #childEmploy=\\\"ngModel\\\" [(ngModel)]=\\\"dependants.childEmploy\\\">\\n                                                                    <option value=\\\"\\\" disabled>Select Option</option>\\n                                                                    <option value=\\\"Employed\\\">Employed</option>\\n                                                                    <option value=\\\"Not\\\">Not</option>\\n                                                                </select>\\n                                                                <div *ngIf=\\\"childEmploy?.touched || childEmploy?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"childEmploy.errors?.required\\\">Employee Status Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                        <div class='col-xs-12 col-sm-12 col-md-4 col-lg-4 '>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"childAis\\\">Whether AIS or Not</label>\\n                                                                <select class=\\\"form-control input-md\\\" id=\\\"childAis\\\" required name=\\\"childAis\\\" (change)=\\\"childHandler($event)\\\" #childAis=\\\"ngModel\\\"\\n                                                                    [(ngModel)]=\\\"dependants.childAis\\\">\\n                                                                    <option value=\\\"\\\" disabled>Select Option</option>\\n                                                                    <option value=\\\"AIS\\\">AIS</option>\\n                                                                    <option value=\\\"Not\\\">Not</option>\\n                                                                </select>\\n                                                                <div *ngIf=\\\"childAis?.touched || childAis?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"childAis.errors?.required\\\">Employee Status Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"row\\\" *ngIf=\\\"childJobType\\\">\\n                                                        <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"childService\\\">Child Service</label>\\n                                                                <select class=\\\"form-control input-md\\\" id=\\\"childService\\\" required name=\\\"childService\\\" #childService=\\\"ngModel\\\" [(ngModel)]=\\\"dependants.childService\\\">\\n                                                                    <option value=\\\"\\\" disabled>Select Option</option>\\n                                                                    <option value=\\\"IAS\\\">IAS</option>\\n                                                                    <option value=\\\"IPS\\\">IPS</option>\\n                                                                    <option value=\\\"IFS\\\">IFS</option>\\n                                                                </select>\\n                                                                <div *ngIf=\\\"childService?.touched || childService?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"childService.errors?.required\\\">Service is Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                    <!-- if AIS Employed Child Starting -->\\n                                                    <div class=\\\"row\\\" *ngIf=\\\"childJobDetails\\\">\\n                                                        <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"childCadre\\\">Cadre</label>\\n                                                                <select class=\\\"form-control input-md\\\" id=\\\"childCadre\\\" required name=\\\"childCadre\\\" #childCadre=\\\"ngModel\\\" [(ngModel)]=\\\"dependants.childCadre\\\">\\n                                                                    <option value=\\\"\\\" disabled>Select Option</option>\\n                                                                    <option *ngFor=\\\"let cad of Cadre\\\" [id]=\\\"cad.id\\\" [value]=\\\"cad.cadre\\\">{{cad.cadre}}</option>\\n                                                                </select>\\n                                                                <div *ngIf=\\\"childCadre?.touched || childCadre?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"childCadre.errors?.required\\\">Cadre is Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                        <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"childBatch\\\">Batch</label>\\n                                                                <input class=\\\"form-control input-md\\\" #childBatch=\\\"ngModel\\\" required id=\\\"childBatch\\\" name=\\\"childBatch\\\" type=\\\"text\\\" placeholder=\\\"Batch\\\"\\n                                                                    [(ngModel)]=\\\"dependants.childBatch\\\">\\n                                                                <div *ngIf=\\\"childBatch?.touched || childBatch?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"childBatch.errors?.required\\\">Batch is Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"row\\\" *ngIf=\\\"childJobDetails\\\">\\n                                                        <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"childDateOfAllotment\\\">Date of allotment of service</label>\\n                                                                <input class=\\\"form-control input-md\\\" #childDateOfAllotment=\\\"ngModel\\\" required id=\\\"childDateOfAllotment\\\" name=\\\"childDateOfAllotment\\\"\\n                                                                    type=\\\"date\\\" placeholder=\\\"Date of allotment of service\\\" [(ngModel)]=\\\"dependants.childDateOfAllotment\\\">\\n                                                                <div *ngIf=\\\"childDateOfAllotment?.touched || childDateOfAllotment?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"childDateOfAllotment.errors?.required\\\">Date of allotment is Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                        <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"childIdentityNumber\\\">Identity Number</label>\\n                                                                <input class=\\\"form-control input-md\\\" #childIdentityNumber=\\\"ngModel\\\" required id=\\\"childIdentityNumber\\\" name=\\\"childIdentityNumber\\\"\\n                                                                    type=\\\"text\\\" placeholder=\\\"Identity Number\\\" [(ngModel)]=\\\"dependants.childIdentityNumber\\\">\\n                                                                <div *ngIf=\\\"childIdentityNumber?.touched || childIdentityNumber?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"childIdentityNumber.errors?.required\\\">Identity Numberis Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                    <!-- if AIS Employed Child Compleated -->\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"panel panel-default\\\">\\n                                            <div class=\\\"panel-heading\\\" role=\\\"tab\\\" id=\\\"headingTwo\\\">\\n                                                <h4 class=\\\"panel-title\\\">\\n                                                    <a class=\\\"collapsed\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#collapseTwo\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseTwo\\\">\\n                                                        Parents Info\\n                                                    </a>\\n                                                </h4>\\n                                            </div>\\n                                            <div id=\\\"collapseTwo\\\" class=\\\"panel-collapse collapse\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"headingTwo\\\">\\n                                                <div class=\\\"panel-body\\\">\\n\\n                                                    <!-- Parent Information -->\\n                                                    <div class=\\\"row clearfix text-center\\\">\\n                                                        <div class=\\\"form-group\\\">\\n                                                            <input id=\\\"image\\\" type=\\\"file\\\" name=\\\"profile_photo\\\" placeholder=\\\"Photo\\\" class=\\\"profilePicEditorClass\\\" id=\\\"file\\\" (change)=\\\"handleParentInput($event)\\\">\\n                                                            <!-- <img src=\\\"../../assets/images/Avatar.jpg\\\" class=\\\"img-circle\\\" alt=\\\"car\\\" width=\\\"150\\\" height=\\\"130\\\"> -->\\n                                                            <img src=\\\"{{parentImg_url}}\\\" class=\\\"img-circle\\\" alt=\\\"profile\\\" width=\\\"150\\\" height=\\\"130\\\">\\n                                                        </div>\\n                                                    </div>\\n\\n                                                    <div class=\\\"row\\\">\\n                                                        <div class='col-xs-12 col-sm-12 col-md-4 col-lg-4 '>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"parentFullName\\\">Full Name</label>\\n                                                                <input class=\\\"form-control input-md\\\" #parentFullName=\\\"ngModel\\\" required id=\\\"parentFullName\\\" name=\\\"parentFullName\\\" type=\\\"text\\\"\\n                                                                    placeholder=\\\"Full Name\\\" [(ngModel)]=\\\"dependants.parentFullName\\\">\\n                                                                <div *ngIf=\\\"parentFullName?.touched || parentFullName?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"parentFullName.errors?.required\\\">Name Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                        <div class='col-xs-12 col-sm-12 col-md-4 col-lg-4 '>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"parentRelation\\\">Relation</label>\\n                                                                <input class=\\\"form-control input-md\\\" #parentRelation=\\\"ngModel\\\" required id=\\\"parentRelation\\\" name=\\\"parentRelation\\\" type=\\\"text\\\"\\n                                                                    placeholder=\\\"Relation\\\" [(ngModel)]=\\\"dependants.parentRelation\\\">\\n                                                                <div *ngIf=\\\"parentRelation?.touched || parentRelation?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"parentRelation.errors?.required\\\">Relation Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                        <div class='col-xs-12 col-sm-12 col-md-4 col-lg-4 '>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"parentDateOfBirth\\\">Date Of Birth</label>\\n                                                                <input class=\\\"form-control input-md\\\" #parentDateOfBirth=\\\"ngModel\\\" required id=\\\"parentDateOfBirth\\\" name=\\\"parentDateOfBirth\\\"\\n                                                                    type=\\\"date\\\" placeholder=\\\"Date Of Birth\\\" [(ngModel)]=\\\"dependants.parentDateOfBirth\\\">\\n                                                                <div *ngIf=\\\"parentDateOfBirth?.touched || parentDateOfBirth?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"parentDateOfBirth.errors?.required\\\">Valid Date Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"row\\\">\\n                                                        <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6 '>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"parentEmploy\\\">Employed or Not</label>\\n                                                                <select class=\\\"form-control input-md\\\" id=\\\"parentEmploy\\\" required name=\\\"parentEmploy\\\" #parentEmploy=\\\"ngModel\\\" [(ngModel)]=\\\"dependants.parentEmploy\\\">\\n                                                                    <option value=\\\"\\\" disabled>Select Option</option>\\n                                                                    <option value=\\\"Employed\\\">Employed</option>\\n                                                                    <option value=\\\"Not\\\">Not</option>\\n                                                                </select>\\n                                                                <div *ngIf=\\\"parentEmploy?.touched || parentEmploy?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"parentEmploy.errors?.required\\\">Employee Status Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n\\n                                                        <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6 '>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"parentAis\\\">Whether AIS or Not</label>\\n                                                                <select class=\\\"form-control input-md\\\" id=\\\"parentAis\\\" required name=\\\"parentAis\\\" (change)=\\\"parentHandler($event)\\\" #parentAis=\\\"ngModel\\\"\\n                                                                    [(ngModel)]=\\\"dependants.parentAis\\\">\\n                                                                    <option value=\\\"\\\" disabled>Select Option</option>\\n                                                                    <option value=\\\"AIS\\\">AIS</option>\\n                                                                    <option value=\\\"Not\\\">Not</option>\\n                                                                </select>\\n                                                                <div *ngIf=\\\"parentAis?.touched || parentAis?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"parentAis.errors?.required\\\">AIS or Not Status Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"row\\\" *ngIf=\\\"parentJobType\\\">\\n                                                        <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"parentService\\\">Child Service</label>\\n                                                                <select class=\\\"form-control input-md\\\" id=\\\"parentService\\\" required name=\\\"parentService\\\" #parentService=\\\"ngModel\\\" [(ngModel)]=\\\"dependants.parentService\\\">\\n                                                                    <option value=\\\"\\\" disabled>Select Option</option>\\n                                                                    <option *ngFor=\\\"let ser of Service\\\" [id]=\\\"ser.id\\\" [value]=\\\"ser.service\\\">{{ser.service}}</option>\\n                                                                </select>\\n                                                                <div *ngIf=\\\"parentService?.touched || parentService?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"parentService.errors?.required\\\">Service is Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                    <!-- if AIS Employed Parent Starting -->\\n                                                    <div class=\\\"row\\\" *ngIf=\\\"parentJobDetails\\\">\\n                                                        <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"parentCadre\\\">Cadre</label>\\n                                                                <select class=\\\"form-control input-md\\\" id=\\\"parentCadre\\\" required name=\\\"parentCadre\\\" #parentCadre=\\\"ngModel\\\" [(ngModel)]=\\\"dependants.parentCadre\\\">\\n                                                                    <option value=\\\"\\\" disabled>Select Option</option>\\n                                                                    <option *ngFor=\\\"let cad of Cadre\\\" [id]=\\\"cad.id\\\" [value]=\\\"cad.cadre\\\">{{cad.cadre}}</option>\\n                                                                </select>\\n                                                                <div *ngIf=\\\"parentCadre?.touched || parentCadre?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"parentCadre.errors?.required\\\">Cadre is Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                        <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"parentBatch\\\">Batch</label>\\n                                                                <input class=\\\"form-control input-md\\\" #parentBatch=\\\"ngModel\\\" required id=\\\"parentBatch\\\" name=\\\"parentBatch\\\" type=\\\"text\\\" placeholder=\\\"Batch\\\"\\n                                                                    [(ngModel)]=\\\"dependants.parentBatch\\\">\\n                                                                <div *ngIf=\\\"parentBatch?.touched || parentBatch?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"parentBatch.errors?.required\\\">Batch is Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"row\\\" *ngIf=\\\"parentJobDetails\\\">\\n                                                        <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"parentDateOfAllotment\\\">Date of allotment of service</label>\\n                                                                <input class=\\\"form-control input-md\\\" #parentDateOfAllotment=\\\"ngModel\\\" required id=\\\"parentDateOfAllotment\\\" name=\\\"parentDateOfAllotment\\\"\\n                                                                    type=\\\"date\\\" placeholder=\\\"Date of allotment of service\\\" [(ngModel)]=\\\"dependants.parentDateOfAllotment\\\">\\n                                                                <div *ngIf=\\\"parentDateOfAllotment?.touched || parentDateOfAllotment?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"parentDateOfAllotment.errors?.required\\\">Date of allotment is Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                        <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"parentIdentityNumber\\\">Identity Number</label>\\n                                                                <input class=\\\"form-control input-md\\\" #parentIdentityNumber=\\\"ngModel\\\" required id=\\\"parentIdentityNumber\\\" name=\\\"parentIdentityNumber\\\"\\n                                                                    type=\\\"text\\\" placeholder=\\\"Identity Number\\\" [(ngModel)]=\\\"dependants.parentIdentityNumber\\\">\\n                                                                <div *ngIf=\\\"parentIdentityNumber?.touched || parentIdentityNumber?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"parentIdentityNumber.errors?.required\\\">Identity Numberis Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                    <!-- if AIS Employed Parent Compleated -->\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"panel panel-default\\\">\\n                                            <div class=\\\"panel-heading\\\" role=\\\"tab\\\" id=\\\"headingThree\\\">\\n                                                <h4 class=\\\"panel-title\\\">\\n                                                    <a class=\\\"collapsed\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#collapseThree\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseThree\\\">\\n                                                        Others Info\\n                                                    </a>\\n                                                </h4>\\n                                            </div>\\n                                            <div id=\\\"collapseThree\\\" class=\\\"panel-collapse collapse\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"headingThree\\\">\\n                                                <div class=\\\"panel-body\\\">\\n                                                    <!-- Others Information -->\\n                                                    <div class=\\\"row clearfix text-center\\\">\\n                                                        <div class=\\\"form-group\\\">\\n                                                            <input id=\\\"image\\\" type=\\\"file\\\" name=\\\"profile_photo\\\" placeholder=\\\"Photo\\\" class=\\\"profilePicEditorClass\\\" id=\\\"file\\\" (change)=\\\"handleOthersInput($event)\\\">\\n                                                            <!-- <img src=\\\"../../assets/images/Avatar.jpg\\\" class=\\\"img-circle\\\" alt=\\\"car\\\" width=\\\"150\\\" height=\\\"130\\\"> -->\\n                                                            <img src=\\\"{{othersImg_url}}\\\" class=\\\"img-circle\\\" alt=\\\"profile\\\" width=\\\"150\\\" height=\\\"130\\\">\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"row\\\">\\n                                                        <div class='col-xs-12 col-sm-12 col-md-4 col-lg-4'>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"othersFullName\\\">Full Name</label>\\n                                                                <input class=\\\"form-control input-md\\\" #othersFullName=\\\"ngModel\\\" required id=\\\"othersFullName\\\" name=\\\"othersFullName\\\" type=\\\"text\\\"\\n                                                                    placeholder=\\\"Full Name\\\" [(ngModel)]=\\\"dependants.othersFullName\\\">\\n                                                                <div *ngIf=\\\"othersFullName?.touched || othersFullName?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"othersFullName.errors?.required\\\">Name Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                        <div class='col-xs-12 col-sm-12 col-md-4 col-lg-4 '>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"othersGender\\\">Gender</label>\\n                                                                <select class=\\\"form-control input-md\\\" id=\\\"othersGender\\\" required name=\\\"othersGender\\\" #othersGender=\\\"ngModel\\\" [(ngModel)]=\\\"dependants.othersGender\\\">\\n                                                                    <option value=\\\"\\\" disabled>Select Option</option>\\n                                                                    <option *ngFor=\\\"let gen of Gender\\\" [id]=\\\"gen.id\\\" [value]=\\\"gen.gender\\\">{{gen.gender}}</option>\\n                                                                </select>\\n                                                                <div *ngIf=\\\"othersGender?.touched || othersGender?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"othersGender.errors?.required\\\">Gender Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                        <div class='col-xs-12 col-sm-12 col-md-4 col-lg-4 '>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"othersRelation\\\">Relation</label>\\n                                                                <input class=\\\"form-control input-md\\\" #othersRelation=\\\"ngModel\\\" required id=\\\"othersRelation\\\" name=\\\"othersRelation\\\" type=\\\"text\\\"\\n                                                                    placeholder=\\\"Realtion\\\" [(ngModel)]=\\\"dependants.othersRelation\\\">\\n                                                                <div *ngIf=\\\"othersRelation?.touched || othersRelation?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"othersRelation.errors?.required\\\">Relation Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"row\\\">\\n                                                        <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6 '>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"othersDateOfBirth\\\">Date Of Birth</label>\\n                                                                <input class=\\\"form-control input-md\\\" #othersDateOfBirth=\\\"ngModel\\\" required id=\\\"othersDateOfBirth\\\" name=\\\"othersDateOfBirth\\\"\\n                                                                    type=\\\"date\\\" placeholder=\\\"Date Of Birth\\\" [(ngModel)]=\\\"dependants.othersDateOfBirth\\\">\\n                                                                <div *ngIf=\\\"othersDateOfBirth?.touched || othersDateOfBirth?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"othersDateOfBirth.errors?.required\\\">Enter Valid Date</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                        <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6 '>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"othersEmploy\\\">Employed or Not</label>\\n                                                                <select class=\\\"form-control input-md\\\" id=\\\"othersEmploy\\\" required name=\\\"othersEmploy\\\" (change)=\\\"othersHandler($event)\\\" #othersEmploy=\\\"ngModel\\\"\\n                                                                    [(ngModel)]=\\\"dependants.othersEmploy\\\">\\n                                                                    <option value=\\\"\\\" disabled>select Option</option>\\n                                                                    <option value=\\\"Employed\\\">Employed</option>\\n                                                                    <option value=\\\"Not\\\">Not</option>\\n                                                                </select>\\n                                                                <div *ngIf=\\\"othersEmploy?.touched || othersEmploy?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"othersEmploy.errors?.required\\\">Employee Status Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"row\\\" *ngIf=\\\"othersJobType\\\">\\n                                                        <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6' *ngIf=\\\"othersAisService\\\">\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"othersService\\\">Child Service</label>\\n                                                                <select class=\\\"form-control input-md\\\" id=\\\"othersService\\\" required name=\\\"othersService\\\" #othersService=\\\"ngModel\\\" [(ngModel)]=\\\"dependants.othersService\\\">\\n                                                                    <option value=\\\"\\\" disabled>Select Option</option>\\n                                                                    <option *ngFor=\\\"let ser of Service\\\" [id]=\\\"ser.id\\\" [value]=\\\"ser.service\\\">{{ser.service}}</option>\\n                                                                </select>\\n                                                                <div *ngIf=\\\"othersService?.touched || othersService?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"othersService.errors?.required\\\">Service is Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                    <!-- if AIS Employed Others Starting -->\\n                                                    <div class=\\\"row\\\" *ngIf=\\\"othersJobDetails\\\">\\n                                                        <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"othersCadre\\\">Cadre</label>\\n                                                                <select class=\\\"form-control input-md\\\" id=\\\"othersCadre\\\" required name=\\\"othersCadre\\\" #othersCadre=\\\"ngModel\\\" [(ngModel)]=\\\"dependants.othersCadre\\\">\\n                                                                    <option value=\\\"\\\" disabled>Cadre</option>\\n                                                                    <option value=\\\"Kerala\\\">Kerala</option>\\n                                                                    <option value=\\\"Other\\\">Other</option>\\n                                                                </select>\\n                                                                <div *ngIf=\\\"othersCadre?.touched || othersCadre?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"othersCadre.errors?.required\\\">Cadre is Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                        <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"othersBatch\\\">Batch</label>\\n                                                                <input class=\\\"form-control input-md\\\" #othersBatch=\\\"ngModel\\\" required id=\\\"othersBatch\\\" name=\\\"othersBatch\\\" type=\\\"text\\\" placeholder=\\\"Batch\\\"\\n                                                                    [(ngModel)]=\\\"dependants.othersBatch\\\">\\n                                                                <div *ngIf=\\\"othersBatch?.touched || othersBatch?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"othersBatch.errors?.required\\\">Batch is Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"row\\\" *ngIf=\\\"othersJobDetails\\\">\\n                                                        <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"othersDateOfAllotment\\\">Date of allotment of service</label>\\n                                                                <input class=\\\"form-control input-md\\\" #othersDateOfAllotment=\\\"ngModel\\\" required id=\\\"othersDateOfAllotment\\\" name=\\\"othersDateOfAllotment\\\"\\n                                                                    type=\\\"date\\\" placeholder=\\\"Date of allotment of service\\\" [(ngModel)]=\\\"dependants.othersDateOfAllotment\\\">\\n                                                                <div *ngIf=\\\"othersDateOfAllotment?.touched || othersDateOfAllotment?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"othersDateOfAllotment.errors?.required\\\">Date of allotment is Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                        <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                                            <div class=\\\"form-group\\\">\\n                                                                <label class=\\\"control-label\\\" for=\\\"othersIdentityNumber\\\">Identity Number</label>\\n                                                                <input class=\\\"form-control input-md\\\" #othersIdentityNumber=\\\"ngModel\\\" required id=\\\"othersIdentityNumber\\\" name=\\\"othersIdentityNumber\\\"\\n                                                                    type=\\\"text\\\" placeholder=\\\"Identity Number\\\" [(ngModel)]=\\\"dependants.othersIdentityNumber\\\">\\n                                                                <div *ngIf=\\\"othersIdentityNumber?.touched || othersIdentityNumber?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                                                    <div *ngIf=\\\"othersIdentityNumber.errors?.required\\\">Identity Numberis Required</div>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                    <!-- if AIS Employed Others Compleated -->\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group text-center space-20\\\">\\n                        <button class=\\\"btn btn-outline-rounded btn-info\\\" (click)=\\\"goToNext(dependantsForm)\\\"> Submit\\n                            <span style=\\\"margin-left:10px;\\\" class=\\\"glyphicon glyphicon-arrow-right\\\"></span>\\n                        </button>\\n                    </div>\\n                </div>\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\"","  import { Component, OnInit }   from '@angular/core';\nimport { Router }              from '@angular/router';\nimport { Dependants }            from '../data/formData.model';\nimport { ProfileService }     from '../shared/profile.service';\nimport { HttpClient,HttpHeaders} from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n\n@Component ({\n    selector:     'dependants'\n    ,templateUrl: './dependants.component.html'\n})\n\nexport class DependantsComponent implements OnInit {\n   \n    baseUrl = environment.baseUrl;\n    title = 'Dependant Details';\n    private dependants: Dependants = new Dependants();\n    private headers = new HttpHeaders().set('Content-Type', 'application/json');\n    selectedFile: File = null;\n    private childImg_url: string;\n    private parentImg_url: string;\n    private othersImg_url: string;\n    form: any;\n    Gender:any[];\n    Cadre: any[];\n    Service: any[];\n\n    \n    // visible=false;\n    // activateSaveButton:Boolean = false;\n\n    // showChild(){\n    //     this.visible = !this.visible;\n    //     this.activateSaveButton = true;\n    // }\n\n    // parentVisible=false;\n    // showParent(){\n    //     this.parentVisible = !this.parentVisible;\n    //     this.activateSaveButton = true;\n    // }\n\n    // othersVisible=false;\n    // showOthers(){\n    //     this.othersVisible = !this.othersVisible;\n    //     this.activateSaveButton = true;\n    // }\n\n\n    constructor(private router: Router, private _profileService: ProfileService,private http: HttpClient) {\n    }\n\n    ngOnInit() {\n       const id = sessionStorage.getItem('userId'); \n       if(!id){\n           this.router.navigate(['/login']); \n        }\n        this.readDependants(id);\n        this.getGenderCombo();\n        this.getChildPic(id);\n        this.getParentPic(id);\n        this.getOthersPic(id);\n        this.getCadreCombo();\n        this.getServiceCombo(); \n\n\n    }\n//Combo From DB\ngetCadreCombo(){\n    this.http.get<any>(`${this.baseUrl}/api/Cadres`, { headers: this.headers })\n    .subscribe(res => {\n        this.Cadre = res;\n    },\n        err => {\n            alert('error while getiing prefix');\n        });\n\n}\ngetServiceCombo() {\n    this.http.get<any>(`${this.baseUrl}/api/Services`, { headers: this.headers })\n        .subscribe(res => {\n            this.Service = res;\n        },\n            err => {\n                alert('error while getiing prefix');\n            });\n}\n//Combo From DB\n//image upload other\nhandleOthersInput(event) {\n    const id = sessionStorage.getItem('userId');\n    const fd = new FormData();\n    this.selectedFile = <File>event.target.files[0];\n    fd.append('image', this.selectedFile, this.selectedFile.name);\n    if(this.selectedFile.type == \"image/png\" || this.selectedFile.type == \"image/jpeg\" ){\n        this.http.post<File>(`${this.baseUrl}/api/containers/otherImage-${id}/upload`, fd)\n            .subscribe(res => {\n                console.log(res);\n                this.getOthersPic(id);\n            });\n    }\n    else{\n        alert(\"upload valid jpg/png\");    \n    }\n}\n\ngetOthersPic(id) {\n   this.http.get<File>(`${this.baseUrl}/api/containers/otherImage-${id}/files`, { headers: this.headers})\n    .subscribe(res =>{\n        var arr: any = res;\n        if(arr.length == 0){\n            this.othersImg_url = `../..${this.baseUrl}/assets/images/Avatar.jpg`; \n        }\n        else{\n        const file_id = arr[arr.length-1]._id;\n        this.othersImg_url = `${this.baseUrl}/api/containers/otherImage-${id}/download/${file_id}`;\n       }\n    },\n    err =>{\n       this.othersImg_url = `../..${this.baseUrl}/assets/images/Avatar.jpg`; \n    }); \n}\n//image upload other\n//image upload child\nhandleFileInput(event) {\n    const id = sessionStorage.getItem('userId');\n    const fd = new FormData();\n    this.selectedFile = <File>event.target.files[0];\n    fd.append('image', this.selectedFile, this.selectedFile.name);\n    if(this.selectedFile.type == \"image/png\" || this.selectedFile.type == \"image/jpeg\" ){\n        this.http.post<File>(`${this.baseUrl}/api/containers/childImage-${id}/upload`, fd)\n            .subscribe(res => {\n                console.log(res);\n                this.getChildPic(id);\n            });\n    }\n    else{\n        alert(\"upload valid jpg/png\");    \n    }\n}\n\ngetChildPic(id) {\n   this.http.get<File>(`${this.baseUrl}/api/containers/childImage-${id}/files`, { headers: this.headers})\n    .subscribe(res =>{\n        var arr: any = res;\n        if(arr.length == 0){\n            this.childImg_url = `../..${this.baseUrl}/assets/images/Avatar.jpg`; \n        }\n        else{\n        const file_id = arr[arr.length-1]._id;\n        this.childImg_url = `${this.baseUrl}/api/containers/childImage-${id}/download/${file_id}`;\n       }\n    },\n    err =>{\n       this.childImg_url = `../..${this.baseUrl}/assets/images/Avatar.jpg`; \n    }); \n}\n// image upload child\n\n//image upload parent\nhandleParentInput(event) {\n    const id = sessionStorage.getItem('userId');\n    const fd = new FormData();\n    this.selectedFile = <File>event.target.files[0];\n    fd.append('image', this.selectedFile, this.selectedFile.name);\n    if(this.selectedFile.type == \"image/png\" || this.selectedFile.type == \"image/jpeg\" ){\n        this.http.post<File>(`${this.baseUrl}/api/containers/parentImage-${id}/upload`, fd)\n            .subscribe(res => {\n                console.log(res);\n                this.getParentPic(id);\n            });\n    }\n    else{\n        alert(\"upload valid jpg/png\");    \n    }\n}\n\ngetParentPic(id) {\n   this.http.get<File>(`${this.baseUrl}/api/containers/parentImage-${id}/files`, { headers: this.headers})\n    .subscribe(res =>{\n        var arr: any = res;\n        if(arr.length == 0){\n            this.parentImg_url = `../..${this.baseUrl}/assets/images/Avatar.jpg`; \n        }\n        else{\n        const file_id = arr[arr.length-1]._id;\n        this.parentImg_url = `${this.baseUrl}/api/containers/parentImage-${id}/download/${file_id}`;\n       }\n    },\n    err =>{\n       this.parentImg_url = `../..${this.baseUrl}/assets/images/Avatar.jpg`; \n    }); \n}\n\n//image upload parent\n\n//image upload//dropdown form DB\n    getGenderCombo(){\n        this.http.get<any>(`${this.baseUrl}/api/Genders`, { headers: this.headers})\n        .subscribe(res =>{\n            this.Gender = res;\n        },\n        err =>{\n           alert('error while getiing Gender');\n        }); \n    }\n\n    selectedPrefix: string='';\n    selectedValue: string='';\n    childJobType: boolean = false;\n    childJobDetails: boolean = false;\n    parentJobType: boolean = false;\n    parentJobDetails: boolean = false;\n    othersJobType: boolean = false;\n    othersJobDetails: boolean = false;\n    \n    childHandler(event:any){\n        this.selectedPrefix = event.target.value;\n        /*alert(this.selectedPrefix);*/\n        if (this.selectedPrefix == 'AIS') { \n           this.childJobType = true;\n           this.childJobDetails = true;\n         }else if (this.selectedPrefix == 'Not') {\n            this.childJobType = false;\n            this.childJobDetails = false;\n         }\n         \n    }\n    parentHandler(event:any){\n        this.selectedValue = event.target.value;\n        /*alert(this.selectedValue);*/\n        if (this.selectedValue == 'AIS') { \n           this.parentJobType = true;\n           this.parentJobDetails = true;\n         }else if (this.selectedPrefix == 'Not') {\n           this.parentJobType = false;\n           this.parentJobDetails = false;\n         }\n    }\n    othersHandler(event:any){\n        this.selectedValue = event.target.value;\n       /* alert(this.selectedValue);*/\n        if (this.selectedValue == 'AIS') { \n            this.othersJobType = true;\n            this.othersJobDetails = true;\n         }else if (this.selectedPrefix == 'Not') {\n           this.othersJobType = false;\n           this.othersJobDetails = false;\n         }\n\n    }\n    // activateSaveAction(){\n    //     this.activateSaveButton = true;\n\n    // }\n\n\n    readDependants(id){\n        this._profileService\n        .readDependants(id)\n        .subscribe(data => {\n             if(!data){\n               this.dependants = new Dependants();\n            }\n            else{\n               this.dependants = data;    \n            }        }, err => {\n            alert('failed');\n        })\n    }\n\n    save(form: any): any {\n        // if (!form.valid) {\n        //     return false;\n        // }\n        const id = sessionStorage.getItem('userId');   \n        this._profileService.createDependants(id,this.dependants).subscribe(\n            data=>{\n                console.log(data);\n                this.router.navigate(['/home']);\n            },err=>{\n                console.log(err);\n            }\n         )\n        // return true;\n    }\n\n   \n\n    goToNext(form: any) {\n        // if (this.save(form)) {\n            \n        // }\n        this.save(form);\n    }\n  \n    \n}","module.exports = \"<app-header>\\n</app-header>\\n<app-aislogo></app-aislogo>\\n<div class=\\\"container\\\">\\n    <div class=\\\"board\\\">\\n        <div class=\\\"tab-content\\\">\\n            <msw-navbar></msw-navbar>\\n                <div class=\\\"tab-pane fade in active\\\">\\n                    <h6 class=\\\"head text-center\\\">{{title}}</h6>\\n                    <br/>\\n                    <div class='row'>\\n                        <div class='col-xs-offset-1 col-xs-10 col-sm-offset-2 col-sm-8 col-md-offset-1 col-md-10 col-lg-offset-1 col-lg-10'>\\n\\n\\n\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <div class=\\\"panel-group\\\" id=\\\"accordion\\\" role=\\\"tablist\\\" aria-multiselectable=\\\"true\\\">\\n                                        <div class=\\\"panel panel-default\\\">\\n                                            <div class=\\\"panel-heading\\\" role=\\\"tab\\\" id=\\\"headingOne\\\">\\n                                                <h4 class=\\\"panel-title\\\">\\n                                                    <a class=\\\"collapsed\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#qualification\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"qualification\\\">\\n                                                        <b>Your Qualification</b>\\n                                                    </a>\\n                                                </h4>\\n                                            </div>\\n                                            <div id=\\\"qualification\\\" class=\\\"panel-collapse collapse\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"headingOne\\\">\\n                                                <!--qualification form-->\\n                                                <div class=\\\"row row-body\\\">\\n                                                    <div class='col-xs-12 col-sm-12 col-md-6 col-lg-12' *ngIf=\\\"visible\\\">\\n                                                        <table class=\\\"table table-sm\\\">\\n                                                            <tr>\\n                                                                <th>Qualification</th>\\n                                                                <th>University</th>\\n                                                                <th>Institute</th>\\n                                                                <th>Subject</th>\\n                                                                <th>Division</th>\\n                                                                <th>Year</th>\\n                                                            </tr>\\n                                                            <tr>\\n                                                                <td>\\n                                                                    <div class=\\\"form-group\\\">\\n                                                                        <input class=\\\"form-control input-md\\\" required pattern=\\\"[a-zA-Z ]*\\\" id=\\\"eduqualification\\\" type=\\\"text\\\" placeholder=\\\"Quaification\\\"\\n                                                                            name=\\\"eduqualification\\\" #eduqualification=\\\"ngModel\\\"\\n                                                                            [(ngModel)]=\\\"qualification.eduqualification\\\">\\n\\n\\n                                                                    </div>\\n                                                                </td>\\n                                                                <td>\\n                                                                    <div class=\\\"form-group\\\">\\n                                                                        <input class=\\\"form-control input-md\\\" required pattern=\\\"[a-zA-Z ]*\\\" id=\\\"university\\\" type=\\\"text\\\" placeholder=\\\"University\\\" name=\\\"university\\\"\\n                                                                            id=\\\"university\\\" #university=\\\"ngModel\\\" [(ngModel)]=\\\"qualification.university\\\">\\n\\n                                                                    </div>\\n                                                                </td>\\n                                                                <td>\\n                                                                    <div class=\\\"form-group\\\">\\n                                                                        <input class=\\\"form-control input-md\\\" required pattern=\\\"[a-zA-Z ]*\\\" id=\\\"institute\\\" type=\\\"text\\\" placeholder=\\\"Institute\\\" name=\\\"institute\\\"\\n                                                                            id=\\\"institute\\\" #institute=\\\"ngModel\\\" [(ngModel)]=\\\"qualification.institute\\\">\\n\\n                                                                    </div>\\n                                                                </td>\\n                                                                <td>\\n                                                                    <div class=\\\"form-group\\\">\\n                                                                        <input class=\\\"form-control input-md\\\" required pattern=\\\"[a-zA-Z ]*\\\" id=\\\"subject\\\" type=\\\"text\\\" placeholder=\\\"Subject\\\" name=\\\"subject\\\"\\n                                                                            id=\\\"subject\\\" #subject=\\\"ngModel\\\" [(ngModel)]=\\\"qualification.subject\\\">\\n\\n                                                                    </div>\\n                                                                </td>\\n                                                                <td>\\n\\n                                                                    <div class=\\\"form-group\\\">\\n                                                                        <input class=\\\"form-control input-md\\\" required id=\\\"division\\\" type=\\\"text\\\" placeholder=\\\"Division\\\" name=\\\"division\\\" id=\\\"division\\\"\\n                                                                            #division=\\\"ngModel\\\" [(ngModel)]=\\\"qualification.division\\\">\\n\\n                                                                    </div>\\n                                                                </td>\\n                                                                <td>\\n                                                                    <div class=\\\"form-group\\\">\\n                                                                        <input class=\\\"form-control input-md\\\" required minlength=\\\"4\\\" maxlength=\\\"4\\\" pattern=\\\"[0-9]{4}\\\" type=\\\"text\\\" placeholder=\\\"Year\\\"\\n                                                                            name=\\\"year\\\" id=\\\"year\\\" #year=\\\"ngModel\\\" [(ngModel)]=\\\"qualification.year\\\">\\n                                                                    </div>\\n                                                                </td>\\n                                                            </tr>\\n                                                        </table>\\n                                                        <button *ngIf=\\\"editFlag==false\\\" class=\\\"btn btn-success btn-outline-rounded btn-info btn-add\\\" (click)=\\\"addQualification()\\\">Add Qualification</button>\\n                                                        <button *ngIf=\\\"editFlag==true\\\" class=\\\"btn btn-success btn-outline-rounded btn-info btn-add\\\" (click)=\\\"saveChanges()\\\">Add Changes</button>\\n                                                    </div>\\n                                                </div>\\n                                                <!--qualification form-->\\n\\n                                                <!--display table-->\\n                                                <div class=\\\"row \\\" *ngIf=\\\"education.qualifications.length > 0\\\">\\n                                                    <div class='col-xs-12 col-sm-12 col-md-6 col-lg-12'>\\n                                                        <h4 class=\\\"text-center\\\">Educational Details</h4>\\n                                                        <table class=\\\"table table-sm\\\">\\n                                                            <tr>\\n                                                                <th>Qualification</th>\\n                                                                <th>University</th>\\n                                                                <th>Institute</th>\\n                                                                <th>Subject</th>\\n                                                                <th>Division</th>\\n                                                                <th>Year</th>\\n                                                                <th>Actions</th>\\n                                                            </tr>\\n                                                            <tr *ngFor=\\\"let qual of education.qualifications; let i=index \\\">\\n                                                                <td>\\n                                                                    {{qual.eduqualification}}\\n                                                                </td>\\n                                                                <td>\\n                                                                    {{qual.university}}\\n                                                                </td>\\n                                                                <td>\\n                                                                    {{qual.institute}}\\n                                                                </td>\\n                                                                <td>\\n                                                                    {{qual.subject}}\\n                                                                </td>\\n                                                                <td>\\n                                                                    {{qual.division}}\\n                                                                </td>\\n                                                                <td>\\n                                                                    {{qual.year}}\\n                                                                </td>\\n                                                                <td>\\n                                                                    <a (click)=\\\"qualificationEdit(i)\\\" class=\\\" btn btn-info  a-info\\\">\\n                                                                        <span class=\\\"glyphicon glyphicon-pencil\\\"></span>\\n                                                                    </a>\\n                                                                    <a (click)=\\\"qualificationDelete(i)\\\" class=\\\"btn  a-info btn-delete\\\">\\n                                                                        <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n                                                                    </a>\\n                                                                </td>\\n                                                            </tr>\\n                                                        </table>\\n                                                        <!-- <ul>\\n                                                                        <li >\\n                                                                            EduQualification: {{qual.eduqualification}},\\n                                                                            University: {{qual.university}}, i = {{i}}\\n                                                                            <a (click)=\\\"qualificationEdit(i)\\\" class=\\\"btn btn-info\\\">Edit</a>\\n                                                                        </li>\\n                                                                    </ul> -->\\n                                                    </div>\\n                                                </div>\\n                                                <!--display Table-->\\n                                                <!--show button-->\\n                                                <div class=\\\"row row-body\\\">\\n                                                    <div class='col-xs-12 col-sm-12 col-md-6 col-lg-12 '>\\n                                                        <button *ngIf=\\\"showFlag\\\" class=\\\"btn-info btn-outline-rounded\\\" (click)=\\\"showQualification()\\\">Add/Show Qualification</button>\\n                                                        <button *ngIf=\\\"hideFlag\\\" class=\\\"btn-info btn-outline-rounded\\\" (click)=\\\"hideQualification()\\\"> Hide Qualification</button>\\n\\n                                                    </div>\\n                                                </div>\\n                                                <!--show button-->\\n\\n\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"panel panel-default\\\">\\n                                            <div class=\\\"panel-heading\\\" role=\\\"tab\\\" id=\\\"headingTwo\\\">\\n                                                <h4 class=\\\"panel-title\\\">\\n                                                    <a class=\\\"collapsed\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#language\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"language\\\">\\n                                                        <b>Languages Known</b>\\n                                                    </a>\\n                                                </h4>\\n                                            </div>\\n                                            <div id=\\\"language\\\" class=\\\"panel-collapse collapse\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"headingTwo\\\">\\n\\n                                                <!--language form-->\\n                                                <div class=\\\"row row-body\\\" *ngIf=\\\"visible\\\">\\n                                                    <div class=\\\"col-xs-12 col-sm-12 col-md-5\\\">\\n                                                        <div class=\\\"form-group\\\">\\n                                                            <label class=\\\"control-label\\\" for=\\\"lang\\\">Languages Known</label>\\n                                                            <select for=\\\"lan\\\" name=\\\"lang\\\"  id=\\\"lang\\\" class=\\\"form-control\\\" \\n                                                            type=\\\"text\\\" placeholder=\\\"language\\\" #lang=\\\"ngModel\\\" [(ngModel)]=\\\"language.lang\\\">\\n                                                            <option value=\\\"\\\" disabled>Select Option</option>\\n                                                            <option *ngFor=\\\"let lan of Languages\\\" [id]=\\\"lan.id\\\" [value]=\\\"lan.language\\\">{{lan.language}}</option>\\n                                                            </select>\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"col-xs-12 col-sm-12 col-md-1\\\">\\n                                                        <div class=\\\"form-group\\\">\\n                                                            <label class=\\\"control-label label-language\\\" for=\\\"read\\\">Read\\n                                                                <input class=\\\" input-md\\\" id=\\\"read\\\" name=\\\"read\\\" type=\\\"checkbox\\\" #read=\\\"ngModel\\\" [(ngModel)]=\\\"language.read\\\">\\n                                                            </label>\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"col-xs-12 col-sm-12 col-md-1\\\">\\n                                                        <div class=\\\"form-group\\\">\\n                                                            <label class=\\\"control-label label-language\\\" for=\\\"write\\\">Write\\n                                                                <input class=\\\" input-md\\\" id=\\\"write\\\" name=\\\"write\\\" type=\\\"checkbox\\\" #write=\\\"ngModel\\\" [(ngModel)]=\\\"language.write\\\">\\n                                                            </label>\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"col-xs-12 col-sm-12 col-md-1\\\">\\n                                                        <div class=\\\"form-group\\\">\\n                                                            <label class=\\\"control-label label-language\\\" for=\\\"speak\\\">Speak\\n                                                                <input class=\\\" input-md\\\" id=\\\"speak\\\" name=\\\"speak\\\" type=\\\"checkbox\\\" #speak=\\\"ngModel\\\" [(ngModel)]=\\\"language.speak\\\">\\n                                                            </label>\\n                                                        </div>\\n                                                    </div>\\n\\n                                                    <div class=\\\"col-xs-12 col-sm-12 col-md-1\\\">\\n                                                        <div class=\\\"form-group\\\">\\n                                                            <label class=\\\"control-label label-language\\\" for=\\\"understand\\\">Understand\\n                                                                <input class=\\\" input-md\\\" id=\\\"understand\\\" name=\\\"understand\\\" type=\\\"checkbox\\\" #understand=\\\"ngModel\\\" [(ngModel)]=\\\"language.understand\\\">\\n                                                            </label>\\n                                                        </div>\\n                                                    </div>\\n                                                      <!--language form-->\\n                                                      <div>\\n                                                        <button *ngIf=\\\"editFlagLang==false\\\" class=\\\"btn btn-success btn-outline-rounded btn-info btn-add language-save\\\" (click)=\\\"addLanguage()\\\">Add Language</button>\\n                                                        <button *ngIf=\\\"editFlagLang==true\\\" class=\\\"btn btn-success btn-outline-rounded btn-info btn-addlanguage-save\\\" (click)=\\\"saveChangesLanguage()\\\">Add Changes</button>\\n                                                    </div>\\n                                                    <!--display Language-->\\n                                                </div>\\n\\n                                                <div class=\\\"row \\\" *ngIf=\\\"education.languages.length > 0\\\">\\n                                                    <div class='col-xs-12 col-sm-12 col-md-6 col-lg-12'>\\n                                                        <h4 class=\\\"text-center\\\">Languages</h4>\\n                                                        <table class=\\\"table table-sm\\\">\\n                                                            <tr>\\n                                                                <th>Language</th>\\n                                                                <th>Read</th>\\n                                                                <th>Write</th>\\n                                                                <th>Speak</th>\\n                                                                <th>Understand</th>\\n                                                                <th>Actions</th>\\n                                                            </tr>\\n                                                            <tr *ngFor=\\\"let lan of education.languages; let i=index \\\">\\n                                                                <td>\\n                                                                    {{lan.lang}}\\n                                                                </td>\\n                                                                <td>\\n                                                                    {{lan.read}}\\n                                                                </td>\\n                                                                <td>\\n                                                                    {{lan.write}}\\n                                                                </td>\\n                                                                <td>\\n                                                                    {{lan.speak}}\\n                                                                </td>\\n                                                                <td>\\n                                                                    {{lan.understand}}\\n                                                                </td>\\n\\n                                                                <td>\\n                                                                    <a (click)=\\\"languageEdit(i)\\\" class=\\\"btn a-info btn-info\\\">\\n                                                                        <span class=\\\"glyphicon glyphicon-pencil\\\"></span>\\n                                                                    </a>\\n\\n                                                                    <a (click)=\\\"languageDelete(i)\\\" class=\\\"btn a-info btn-delete\\\">\\n                                                                        <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n                                                                    </a>\\n                                                                </td>\\n                                                            </tr>\\n                                                        </table>\\n\\n                                                        <!-- <ul>\\n                                    <li >\\n                                        EduQualification: {{qual.eduqualification}},\\n                                        University: {{qual.university}}, i = {{i}}\\n                                        <a (click)=\\\"qualificationEdit(i)\\\" class=\\\"btn btn-info\\\">Edit</a>\\n                                    </li>\\n                                </ul> -->\\n                                                    </div>\\n                                                </div>\\n                                                <!--display Language-->\\n                                                <!--show button-->\\n                                                <div class=\\\"row row-body\\\">\\n                                                    <div class='col-xs-12 col-sm-12 col-md-6 col-lg-12 '>\\n                                                        <button *ngIf=\\\"showFlag\\\" class=\\\"btn-info btn-outline-rounded\\\" (click)=\\\"showLanguage()\\\">Add/Show Language</button>\\n                                                        <button *ngIf=\\\"hideFlag\\\" class=\\\"btn-info btn-outline-rounded\\\" (click)=\\\"hideLanguage()\\\"> Hide Language</button>\\n\\n                                                    </div>\\n                                                </div>\\n                                                <!--show button-->\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <!--fields-->\\n                            <form #educationForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\n\\n                            <div class=\\\"row\\\">\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"userCv\\\">user CV</label>\\n                                        <input class=\\\"form-control input-md\\\" #userCv=\\\"ngModel\\\" required id=\\\"userCv\\\" name=\\\"userCv\\\" \\n                                        type=\\\"file\\\" placeholder=\\\"userCv\\\"\\n                                        (change)=\\\"handleFileInput($event)\\\" [(ngModel)]=\\\"education.userCv\\\">\\n\\n                                        <a target=\\\"_blank\\\" download href=\\\"{{resume_url}}\\\" class=\\\"fa fa-download resumeDownloadIconCls\\\"></a>\\n                                        <div *ngIf=\\\"userCv?.touched || userCv?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"userCv.errors?.required\\\"> Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"mothertounge\\\">Mothertounge</label>\\n                                        <select class=\\\"form-control input-md\\\" #mothertounge=\\\"ngModel\\\" required id=\\\"mothertounge\\\" name=\\\"mothertounge\\\" type=\\\"file\\\"\\n                                            placeholder=\\\"mothertounge\\\" [(ngModel)]=\\\"education.mothertounge\\\">\\n                                            <option value=\\\"\\\" disabled>Select Option</option>\\n                                            <option *ngFor=\\\"let lan of Languages\\\" [id]=\\\"lan.id\\\" [value]=\\\"lan.language\\\">{{lan.language}}</option>\\n\\n                                        </select>\\n                                        <div *ngIf=\\\"mothertounge?.touched || mothertounge?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"mothertounge.errors?.required\\\"> Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n\\n                            <div class=\\\"form-group text-center\\\">\\n                                <button class=\\\"btn btn-success btn-outline-rounded btn-info\\\" [disabled]=\\\"!educationForm.valid\\\" (click)=\\\"goToNext(educationForm)\\\">\\n                                    Submit\\n                                    <span style=\\\"margin-left:10px;\\\" class=\\\"glyphicon glyphicon-arrow-right\\\"></span>\\n                                </button>\\n                            </div>\\n                        </form>\\n\\n                        </div>\\n                    </div>\\n                </div>\\n\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Education } from './education';\nimport { ProfileService } from '../shared/profile.service';\nimport { Qualification } from './qualification';\nimport { Language } from './language';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n\n\n@Component({\n    selector: 'mt-wizard-eduation'\n    , templateUrl: './education.component.html'\n})\n\nexport class EducationComponent implements OnInit {\n\n    baseUrl = environment.baseUrl;\n    editFlag = false\n    editFlagLang = false\n    file_id: string;\n    file_name: string;\n    title = 'Education info';\n    private qualification: Qualification = new Qualification();\n    language: Language = new Language();\n    education: Education = new Education()\n    form: any;\n    Languages: any[];\n\n    selectedFile: File = null;\n    private headers = new HttpHeaders().set('Content-Type', 'application/json');\n    private resume_url: string;\n\n    constructor(private router: Router, private _profileService: ProfileService, private http: HttpClient) {\n    }\n\n    ngOnInit() {\n        const id = sessionStorage.getItem('userId');\n        if (!id) {\n            this.router.navigate(['/login']);\n        }\n        this.readEducation(id);\n        this.getResume(id);\n        this.getLanguagesCombo();\n    }\n\n    getLanguagesCombo() {\n        this.http.get<any>(`${this.baseUrl}/api/Languages`, { headers: this.headers })\n            .subscribe(res => {\n                this.Languages = res;\n            },\n                err => {\n                    alert('error while getiing prefix');\n                });\n    }\n\n    //uploadfile\n    handleFileInput(event) {\n        const id = sessionStorage.getItem('userId');\n        const fd = new FormData();\n        this.selectedFile = <File>event.target.files[0];\n        fd.append('file', this.selectedFile, this.selectedFile.name);\n        // this.http.post<File>(`http://localhost:4000/api/users/${id}/uploadDisplayPic`, fd)\n        // this.http.post<File>(`${this.baseUrl}/api/containers/resume-${id}/upload`,fd)\n        //     .subscribe(res =>{\n        //         console.log(res);\n        //         this.getResume(id); \n        //     });\n        if (this.selectedFile.type == \"application/pdf\") {\n            this.http.post<File>(`${this.baseUrl}/api/containers/resume-${id}/upload`, fd)\n                .subscribe(res => {\n                    console.log(res);\n                    this.getResume(id);\n                });\n        }\n        else {\n            alert(\"upload valid pdf format\");\n        }\n    }\n\n    getResume(id) {\n        this.http.get<File>(`${this.baseUrl}/api/containers/resume-${id}/files`, { headers: this.headers })\n            .subscribe(res => {\n                var arr: any = res;\n                if (arr.length == 0) {\n                    // alert(\"no resume in your profile\"); \n                }\n                else {\n\n                    this.file_id = arr[arr.length - 1]._id;\n                    this.file_name = arr[arr.length - 1].filename;\n\n                    this.resume_url = `${this.baseUrl}/api/containers/resume-${id}/download/${this.file_id}`;\n                }\n\n            },\n                err => {\n                    alert('error');\n                });\n    }\n    //language\n    addLanguage() {\n        if (this.isBlankLang(this.language)) {\n            console.log(\"language is empty\")\n            return console.log(JSON.stringify(this.language))\n\n        } else {\n            console.log(\"language is not emty\")\n            this.education.languages.push(this.language)\n            this.language = new Language()\n        }\n    }\n\n    isBlankLang(language) {\n        if (language.lang == null) {\n            return true\n        }\n        else {\n            return false\n        }\n\n    }\n\n\n\n    languageEdit(indx) {\n        this.language = this.education.languages[indx]\n        this.editFlag = true\n    }\n\n    languageDelete(valueToRemove) {\n        this.education.languages.splice(valueToRemove, 1)\n\n    }\n\n\n    saveChangesLanguage() {\n        this.language = new Language()\n        this.editFlag = false\n    }\n\n    //Qualifications\n    addQualification() {\n        if (this.isBlank(this.qualification)) {\n            console.log(this.qualification);\n            return console.log(JSON.stringify(this.qualification))\n\n        } else {\n            console.log(\"qualification is not emty\")\n            this.education.qualifications.push(this.qualification)\n            this.qualification = new Qualification()\n        }\n    }\n\n    isBlank(qualification) {\n\n        if (qualification.eduqualification == null) {\n            return true\n        } else if (qualification.university == null) {\n            return true\n        } else if (qualification.institute == null) {\n            return true\n        } else if (qualification.subject == null) {\n            return true\n        } else if (qualification.division == null) {\n            return true\n        } else if (qualification.year == null) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n\n\n    qualificationEdit(indx) {\n        this.qualification = this.education.qualifications[indx]\n        this.editFlag = true\n    }\n\n    qualificationDelete(valueToRemove) {\n        this.education.qualifications.splice(valueToRemove, 1)\n    }\n\n    saveChanges() {\n        this.qualification = new Qualification()\n        this.editFlag = false\n    }\n\n\n    qualEmptyCheck: any[];\n\n    isEmpty(obj) {\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key))\n                this.qualEmptyCheck.push(\"key\");\n            console.log(\"qualification=\" + key);\n\n            return false;\n        }\n        return true;\n    }\n    //show or hide\n    visible = false;\n    showFlag = true;\n    showQualification() {\n        this.hideFlag = true;\n        this.visible = true;\n        this.showFlag = false;\n    }\n    hideFlag = false;\n    hideQualification() {\n        this.hideFlag = false;\n        this.visible = false;\n        this.showFlag = true;\n\n    }\n    showLanguage() {\n        this.hideFlag = true;\n        this.visible = true;\n        this.showFlag = false;\n    }\n    hideLanguage() {\n        this.hideFlag = false;\n        this.visible = false;\n        this.showFlag = true;\n\n    }\n\n    readEducation(id) {\n        this._profileService\n            .readEducation(id)\n            .subscribe(data => {\n                if (!data) {\n                    this.education = new Education();\n                }\n                else {\n                    this.education = data;\n                }\n\n                console.log(JSON.stringify(this.education))\n\n            }, err => {\n                console.log(\"Fetch failed in education\")\n            })\n    }\n\n    save(form: any): any {\n        if (!form.valid) {\n            return false;\n        }\n        console.log(JSON.stringify(this.education))\n        const userId = sessionStorage.getItem('userId');\n        this._profileService.createEducation(userId, this.education).subscribe(\n            data => {\n                console.log(data);\n            }, err => {\n                console.log(err);\n            }\n        )\n        return true;\n    }\n\n    goToNext(form: any) {\n        if (this.save(form)) {\n            // Navigate to the work page\n            this.router.navigate(['/work']);\n        }\n    }\n\n}\n","import { Qualification } from \"./qualification\";\nimport { Language } from \"./language\";\n\nexport class Education {\n    qualifications: Qualification[] = []\n    languages : Language[]=[]\n    userCv: string = '';\n    mothertounge: string = '';\n}\n","export class Language {\n}\n","export class Qualification {\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"footer text-center\\\">\\n    <div class=\\\"container\\\">\\n         Designed and Developed by <a href=\\\"http://cdit.org\\\" target=\\\"_blank\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"clicking will lead to external website of C-DIT\\\">Centre for Development of Imaging Technology (C-DIT)</a>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-inverse\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#myNavbar\\\">\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>                        \\n      </button>\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/home\\\">AIS</a>\\n    </div>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"myNavbar\\\">\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n      \\t<li><a routerLink=\\\"/home\\\"><span class=\\\"glyphicon glyphicon-home\\\"></span> Home</a></li>\\n        <li><a routerLink=\\\"/personal\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span> Profile</a></li>\\n        <li><a routerLink=\\\"/changepassword\\\"><span class=\\\"glyphicon glyphicon-lock\\\"></span> Change Password</a></li>\\n        <li><a (click) = \\\"logout($event)\\\"><span class=\\\"glyphicon glyphicon-log-in\\\"></span> Logout</a></li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\\n\\t\\t\\t\\t\\t\\t\\t\"","import { Component, OnInit } from '@angular/core';\nimport { Router }              from '@angular/router';\nimport { LoginService }     from '../shared/login.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private router: Router, private _loginService: LoginService) { }\n\n  ngOnInit() {\n  }\n\n  logout(event){\n    const token = sessionStorage.getItem('token');\n  \tthis._loginService.logout(token).subscribe(\n  \t\tdata=>{\n  \t\t\tsessionStorage.clear();\n  \t\t\tthis.router.navigate(['/login']);\n  \t\t},err=>{\n  \t\t\talert('logout failed');\n  \t\t}\n  \t\t)\n   }\n\n}\n","module.exports = \"\"","module.exports = \"<app-header></app-header>\\n<app-aislogo></app-aislogo>\\n<div class=\\\"container\\\">\\n    <div class=\\\"board\\\">\\n        <div class=\\\"tab-content\\\">\\n          <h1 style=\\\"padding: 15px;\\\">ALL INDIA SERVICES (AIS)MEMBERS IN KERALA</h1>          \\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router }              from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  \t const id = sessionStorage.getItem('userId');\n        if(!id){\n           this.router.navigate(['/login']); \n        }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-aislogo></app-aislogo>\\n<div class=\\\"container\\\">\\n    <div class=\\\"board\\\">\\n        <div class=\\\"tab-content\\\">\\n          \\n          <form (ngSubmit)=\\\"OnSubmit(userEmail.value,password.value)\\\"  #loginForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\n            <div class=\\\"tab-pane fade in active\\\">\\n              <h6 class=\\\"head text-center\\\">LOGIN</h6>\\n              <br/>\\n              <div class='row'>\\n                <div class='col-xs-offset-1 col-xs-10 col-sm-offset-2 col-sm-8 col-md-offset-1 col-md-10 col-lg-offset-1 col-lg-10'>\\n\\n\\n                  <div class=\\\"row\\\">\\n                    <div class='col-md-offset-3 col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                      <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label\\\" for=\\\"Email\\\">Username</label>\\n                        <input class=\\\"form-control input-md\\\" #userEmail ngModel required pattern=\\\"^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$\\\" \\n                        id=\\\"userEmail\\\" name=\\\"userEmail\\\" type=\\\"text\\\" placeholder=\\\"userEmail\\\">   \\n                        <div *ngIf = \\\"userEmail?.touched || userEmail?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                         <div *ngIf = \\\"userEmail.errors?.required\\\">email Required</div>\\n                       </div>\\n                     </div>\\n                   </div>\\n                 </div>    \\n\\n                 <div class=\\\"row\\\">\\n                  <div class='col-md-offset-3 col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\" for=\\\"Password\\\">Password</label>\\n                      <input class=\\\"form-control input-md\\\" #password ngModel required    id=\\\"password\\\"\\n                      name=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"password\\\">\\n\\n                      <div *ngIf = \\\"password?.touched || password?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                       <div *ngIf = \\\"password.errors?.required\\\">Password Required</div>\\n                     </div>\\n                   </div>\\n                 </div>\\n               </div>    \\n\\n               <div class=\\\"form-group text-center\\\">\\n                <button  class=\\\"btn btn-success btn-outline-rounded btn-info\\\" style=\\\"margin:0px 15px 0px 0px;\\\"\\n                > Login\\n                <span class=\\\"glyphicon glyphicon-arrow-right\\\"></span>\\n              </button>\\n            </div>\\n\\n\\n          </div>\\n        </div>\\n      </div>\\n    </form>          \\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router }              from '@angular/router';\nimport { LoginService }      from '../shared/login.service';\nimport { Login }            from '../login/login.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  title = 'Login';\n  form: any;\n  login:Login;\n  userEmail:string;\n  password:string;\n  constructor(private router: Router, private _loginService:LoginService) {\n    }\n\n  ngOnInit() {\n  \tconst id = sessionStorage.getItem('userId'); \n       if(id){\n           this.router.navigate(['/home']); \n        }\n  }\n\n  OnSubmit(userEmail,password){\n       const credentials:any = {};\n       credentials.email = userEmail;\n       credentials.password = password;\n       this._loginService.getlogin(credentials).subscribe(\n\n              response =>{\n                  console.log(response);\n                  var stringfyObj = JSON.stringify(response);\n                  var  parsedObj=JSON.parse(stringfyObj);\n                  sessionStorage.setItem('userId',parsedObj.userId);\n                  sessionStorage.setItem('token',parsedObj.accessToken);\n                  if(parsedObj.passwordReset == true){\n                    this.router.navigate(['/changepassword']);\n                  }\n                  else{\n                    this.router.navigate(['/home']);\n                  }  \n                  \n              },\n              err => {\n                  alert(\"Invalid Credentials\");\n              }\n          )\n    }\n\n  }\n\n\n        // save(form: any): any {\n        // if (!form.valid) {\n        //     return false;\n        // }\n\n\n\n\n    // goToNext(form: any) {\n        // if (this.save(form)) {\n        //     // Navigate to the education page\n        //     this.router.navigate(['/personal']);\n        // }\n    // }\n\n// }\n","module.exports = \"<div class=\\\"board-inner\\\" id=\\\"status-buttons\\\">\\n    <ul class=\\\"nav nav-tabs\\\" id=\\\"myTab\\\">\\n        <div class=\\\"liner\\\"></div>\\n                    \\n        \\n        <li>\\n            <a routerLink=\\\"/personal\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\" data-toggle=\\\"tab\\\" title=\\\"personal\\\">\\n                <span class=\\\"round-tabs one\\\">\\n                    <i class=\\\"glyphicon glyphicon-user\\\"></i>\\n                </span>\\n            </a>\\n        </li>\\n\\n       \\n        <li>\\n            <a routerLink=\\\"/spouse\\\" routerLinkActive=\\\"active\\\" data-toggle=\\\"tab\\\" id=\\\"spouse\\\" title=\\\"spouse\\\">\\n                <span class=\\\"round-tabs four\\\">\\n                    <i class=\\\"fa fa-user-plus glyphicon\\\" style=\\\"top: -2px\\\"></i>\\n                </span>\\n            </a>\\n        </li>\\n\\n        \\n        <li>\\n            <a routerLink=\\\"/education\\\" routerLinkActive=\\\"active\\\" data-toggle=\\\"tab\\\" title=\\\"education\\\">\\n                <span class=\\\"round-tabs three\\\">\\n                    <i class=\\\"glyphicon glyphicon-education\\\"></i>\\n                </span>\\n            </a>\\n        </li>\\n        \\n         <li>\\n            <a routerLink=\\\"/work\\\" routerLinkActive=\\\"active\\\" data-toggle=\\\"tab\\\" title=\\\"work\\\">\\n                <span class=\\\"round-tabs two\\\">\\n                    <i class=\\\"glyphicon glyphicon-briefcase\\\"></i>\\n                </span> \\n            </a>\\n        </li>\\n        \\n        <li>\\n            <a routerLink=\\\"/dependants\\\" routerLinkActive=\\\"active\\\" data-toggle=\\\"tab\\\" title=\\\"dependants\\\">\\n                <span class=\\\"round-tabs five\\\">\\n                    <i class=\\\"glyphicon fa fa-users\\\"></i>\\n                </span>\\n            </a>\\n        </li>\\n\\n        <!-- circular ok icon -->\\n        <!-- <li>\\n            <a routerLink=\\\"/result\\\" routerLinkActive=\\\"active\\\" data-toggle=\\\"tab\\\" title=\\\"completed\\\">\\n                <span class=\\\"round-tabs six\\\">\\n                    <i class=\\\"glyphicon glyphicon-ok\\\"></i>\\n                </span>\\n            </a>\\n        </li> -->\\n                \\n    </ul>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\\n\\n<!-- Close the Splash screen -->\\n<script src=\\\"assets/js/loading-bars.js\\\"></script>\"","import { Component } from '@angular/core';\n\n@Component ({\n    selector: 'msw-navbar'\n    ,templateUrl: './navbar.component.html'\n})\n\nexport class NavbarComponent {}","module.exports = \"<app-header></app-header>\\n<app-aislogo></app-aislogo>\\n<div class=\\\"container\\\">\\n    <div class=\\\"board\\\">\\n        <div class=\\\"tab-content\\\">\\n            <msw-navbar></msw-navbar>\\n            <form #personalForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\n                <div class=\\\"tab-pane fade in active\\\">\\n                    <h6 class=\\\"head text-center\\\">{{title}}</h6>\\n                    <br/>\\n                    <div class='row'>\\n                        <div class='col-xs-offset-1 col-xs-10 col-sm-offset-2 col-sm-8 col-md-offset-1 col-md-10 col-lg-offset-1 col-lg-10'>\\n                            <div class=\\\"row clearfix text-center\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <input id=\\\"image\\\" type=\\\"file\\\" name=\\\"profile_photo\\\" placeholder=\\\"Photo\\\" class=\\\"profilePicEditorClass\\\" id=\\\"file\\\" (change)=\\\"handleFileInput($event)\\\">\\n                                    <!-- <img src=\\\"../../assets/images/Avatar.jpg\\\" class=\\\"img-circle\\\" alt=\\\"car\\\" width=\\\"150\\\" height=\\\"130\\\"> -->\\n                                    <img src=\\\"{{img_url}}\\\" class=\\\"img-circle\\\" alt=\\\"profile\\\" width=\\\"150\\\" height=\\\"130\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"userPrefix\\\">Prefix</label>\\n                                        <select class=\\\"form-control input-md\\\" id=\\\"userPrefix\\\" required name=\\\"userPrefix\\\" #userPrefix=\\\"ngModel\\\" [(ngModel)]=\\\"personal.userPrefix\\\">\\n                                            <option value=\\\"\\\" disabled>Select Option</option>\\n                                            <option *ngFor=\\\"let pre of Prefix\\\" [id]=\\\"pre.id\\\" [value]=\\\"pre.prefix\\\">{{pre.prefix}}</option>\\n                                        </select>\\n                                        <div *ngIf=\\\"userPrefix?.touched || userPrefix?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"userPrefix.errors?.required\\\">Prefix Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"fullName\\\">Full Name</label>\\n                                        <input class=\\\"form-control input-md\\\" #fullName=\\\"ngModel\\\" required pattern=\\\"[a-zA-Z ]*\\\" id=\\\"fullName\\\" name=\\\"fullName\\\" type=\\\"text\\\"\\n                                            placeholder=\\\"Full Name\\\" [(ngModel)]=\\\"personal.fullName\\\">\\n                                        <div *ngIf=\\\"fullName?.touched || fullName?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"fullName.errors?.required\\\">Name Required</div>\\n                                            <div *ngIf=\\\"fullName.errors?.pattern\\\">Invalid Name</div>\\n                                        </div>\\n                                    </div>\\n\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"gender\\\">Gender</label>\\n                                        <select class=\\\"form-control\\\" id=\\\"gender\\\" required name=\\\"gender\\\" #gender=\\\"ngModel\\\" [(ngModel)]=\\\"personal.gender\\\">\\n                                            <option value=\\\"\\\" disabled>Select Option</option>\\n                                            <option *ngFor=\\\"let gen of Gender\\\" [id]=\\\"gen.id\\\" [value]=\\\"gen.gender\\\">{{gen.gender}}</option>\\n                                        </select>\\n                                        <div *ngIf=\\\"gender?.touched || gender?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"gender.errors?.required\\\">Gender Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"dateOfBirth\\\">Date Of Birth</label>\\n                                        <input class=\\\"form-control input-md\\\" #dateOfBirth=\\\"ngModel\\\" required date id=\\\"dateOfBirth\\\" name=\\\"dateOfBirth\\\" type=\\\"date\\\"\\n                                            placeholder=\\\"Date Of Birth\\\" [(ngModel)]=\\\"personal.dateOfBirth\\\">\\n                                        <div *ngIf=\\\"dateOfBirth?.touched || dateOfBirth?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"dateOfBirth.errors?.required\\\">Date is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"aadhaarNumber\\\">Aadhaar Number</label>\\n                                        <input class=\\\"form-control input-md\\\" #aadhaarNumber=\\\"ngModel\\\" required minlength=\\\"12\\\" maxlength=\\\"16\\\" pattern=\\\"[0-9]{12,16}\\\"\\n                                            id=\\\"aadhaarNumber\\\" name=\\\"aadhaarNumber\\\" type=\\\"text\\\" placeholder=\\\"Aadhaar Number\\\"\\n                                            [(ngModel)]=\\\"personal.aadhaarNumber\\\">\\n                                        <div *ngIf=\\\"aadhaarNumber?.touched || aadhaarNumber?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"aadhaarNumber.errors?.required\\\">Aadhaar Number Required</div>\\n                                            <div *ngIf=\\\"aadhaarNumber.errors?.pattern\\\">Should have 12 to 16 Digits valid Number</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"penNumber\\\">PEN Number</label>\\n                                        <input class=\\\"form-control input-md\\\" #penNumber=\\\"ngModel\\\" required maxlength=\\\"8\\\" pattern=\\\"[0-9]{6,8}\\\" id=\\\"penNumber\\\" name=\\\"penNumber\\\"\\n                                            type=\\\"text\\\" placeholder=\\\"PEN Number\\\" [(ngModel)]=\\\"personal.penNumber\\\" minlength=\\\"6\\\"\\n                                            maxlength=\\\"8\\\">\\n                                        <div *ngIf=\\\"penNumber?.touched || penNumber?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"penNumber.errors?.required\\\">PEN Number Required</div>\\n                                            <div *ngIf=\\\"penNumber.errors?.pattern\\\">Should have 6 to 8 Digits valid Number</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"email\\\">Email</label>\\n                                        <input class=\\\"form-control input-md\\\" #email=\\\"ngModel\\\" required pattern=\\\"^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$\\\" id=\\\"email\\\" name=\\\"email\\\"\\n                                            type=\\\"text\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"personal.email\\\">\\n                                        <div *ngIf=\\\"email?.touched || email?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"email.errors?.required\\\">Email Required</div>\\n                                            <div *ngIf=\\\"email.errors?.pattern\\\">Invalid Email</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"mobile\\\">Mobile Number</label>\\n                                        <input class=\\\"form-control input-md\\\" #mobile=\\\"ngModel\\\" required minlength=\\\"10\\\" maxlength=\\\"10\\\" pattern=\\\"[0-9]{10}\\\" id=\\\"mobile\\\"\\n                                            name=\\\"mobile\\\" type=\\\"text\\\" placeholder=\\\"Mobile Number\\\" [(ngModel)]=\\\"personal.mobile\\\">\\n                                        <div *ngIf=\\\"mobile?.touched || mobile?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"mobile.errors?.required\\\">Mobile Required</div>\\n                                            <div *ngIf=\\\"mobile.errors?.pattern\\\">Should have 10 Digits</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"maritialStatus\\\">Maritial Status</label>\\n                                        <select class=\\\"form-control\\\" id=\\\"maritialStatus\\\" required name=\\\"maritialStatus\\\" #maritialStatus=\\\"ngModel\\\" [(ngModel)]=\\\"personal.maritialStatus\\\">\\n                                            <option value=\\\"\\\" disabled>Select Option</option>\\n                                            <option value=\\\"Married\\\">Married</option>\\n                                            <option value=\\\"Unmarried\\\">Unmarried</option>\\n\\n                                        </select>\\n                                        <div *ngIf=\\\"maritialStatus?.touched || maritialStatus?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"maritialStatus.errors?.required\\\">maritialStatus Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group text-center\\\">\\n                                <button class=\\\"btn btn-outline-rounded btn-info\\\" [disabled]=\\\"!personalForm.valid\\\" (click)=\\\"goToNext(personalForm)\\\"> Submit\\n                                    <span style=\\\"margin-left:10px;\\\" class=\\\"glyphicon glyphicon-arrow-right\\\"></span>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Personal } from '../data/formData.model';\nimport { ProfileService } from '../shared/profile.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\nimport { DISABLED } from '@angular/forms/src/model';\n\n@Component({\n    selector: 'personal',\n    templateUrl: './personal.component.html'\n})\nexport class PersonalComponent implements OnInit {\n\n    baseUrl = environment.baseUrl;\n    title = 'Basic Info';\n    personal: Personal = new Personal();\n    form: any;\n    Prefix: any[];\n    Gender: any[];\n    selectedFile: File = null;\n    private headers = new HttpHeaders().set('Content-Type', 'application/json');\n    private img_url: string;\n\n    constructor(private router: Router, private _profileService: ProfileService, private http: HttpClient) {\n    }\n\n    ngOnInit() {\n        const id = sessionStorage.getItem('userId');\n        if (!id) {\n            this.router.navigate(['/login']);\n        }\n        this.readProfile(id);\n        this.getProfilePic(id);\n        this.getPrefixCombo();\n        this.getGenderCombo();\n    }\n\n\n    getPrefixCombo() {\n        this.http.get<any>(`${this.baseUrl}/api/Prefixes`, { headers: this.headers })\n            .subscribe(res => {\n                this.Prefix = res;\n            },\n                err => {\n                    alert('error while getiing prefix');\n                });\n    }\n\n    getGenderCombo() {\n        this.http.get<any>(`${this.baseUrl}/api/Genders`, { headers: this.headers })\n            .subscribe(res => {\n                this.Gender = res;\n            },\n                err => {\n                    alert('error while getiing Gender');\n                });\n    }\n\n    handleFileInput(event) {\n        const id = sessionStorage.getItem('userId');\n        const fd = new FormData();\n        this.selectedFile = <File>event.target.files[0];\n        fd.append('image', this.selectedFile, this.selectedFile.name);\n        if (this.selectedFile.type == \"image/png\" || this.selectedFile.type == \"image/jpeg\") {\n            this.http.post<File>(`${this.baseUrl}/api/containers/profile-${id}/upload`, fd)\n                .subscribe(res => {\n                    console.log(res);\n                    this.getProfilePic(id);\n                });\n        }\n        else {\n            alert(\"upload valid jpg/png\");\n        }\n    }\n\n    getProfilePic(id) {\n        this.http.get<File>(`${this.baseUrl}/api/containers/profile-${id}/files`, { headers: this.headers })\n            .subscribe(res => {\n                var arr: any = res;\n                if (arr.length == 0) {\n                    this.img_url = `../..${this.baseUrl}/assets/images/Avatar.jpg`;\n                }\n                else {\n                    const file_id = arr[arr.length - 1]._id;\n                    this.img_url = `${this.baseUrl}/api/containers/profile-${id}/download/${file_id}`;\n                }\n            },\n                err => {\n                    this.img_url = `../..${this.baseUrl}/assets/images/Avatar.jpg`;\n                });\n    }\n\n    readProfile(id) {\n        this._profileService\n            .readProfile(id)\n            .subscribe(data => {\n                if (!data) {\n                    this.personal = new Personal();\n                }\n                else {\n                    this.personal = data;\n                }\n                console.log('component:' + JSON.stringify(this.personal));\n            }, err => {\n                alert('failed');\n            })\n    }\n\n    save(form: any): any {\n        if (!form.valid) {\n            return false;\n        }\n        const id = sessionStorage.getItem('userId');\n        this._profileService.createProfile(id, this.personal).subscribe(\n            data => {\n                console.log(data);\n            }, err => {\n                console.log(err);\n            }\n        )\n        return true;\n    }\n\n    disabled = false;\n    goToNext(form: any) {\n        if (this.save(form)) {\n            if (this.personal.maritialStatus == 'Married') {\n                this.router.navigate(['/spouse']);\n            } else {\n                this.router.navigate(['/education']);\n\n               \n            }\n\n        }\n    }\n\n\n}\n","module.exports = \"<div class=\\\"tab-pane fade in active\\\">\\n    <h3 class=\\\"head text-center\\\">{{title}}</h3>\\n    <!-- <h4 class=\\\"text-center\\\">\\n        Made with <i class=\\\"fa fa-heart heart\\\" style=\\\"color:#f48260;\\\"></i> by <a href=\\\"https://www.cc28tech.com\\\" target=\\\"_blank\\\">Cathy Wun</a>. Check out the tutorials <a href=\\\"https://www.cc28tech.com/angular-multi-step-part-1\\\" target=\\\"_blank\\\">here.</a>\\n    </h4> -->\\n    <!-- <p class=\\\"narrow text-center\\\">\\n        Here is a copy of the information you have entered:\\n    </p> -->\\n    <div class='row'>\\n        <div class='col-xs-offset-1 col-xs-10 col-sm-offset-3 col-sm-8 col-md-offset-4 col-md-8'>\\n           <!--  <div class=\\\"row\\\">\\n                <div class='col-xs-3 col-sm-2'>\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label\\\" for=\\\"name\\\">Name: </label> \\n                    </div>\\n                </div>\\n                <div class='col-xs-9 col-sm-10'>\\n                    \\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class='col-xs-3 col-sm-2'>\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label\\\" for=\\\"email\\\">Email: </label> \\n                    </div>\\n                </div>\\n                <div class='col-xs-9 col-sm-10'>\\n                   \\n                </div>\\n           </div>     \\n            <div class=\\\"row\\\">\\n                <div class='col-xs-3 col-sm-2'>\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label\\\" for=\\\"work\\\">Work: </label> \\n                    </div>\\n                </div>\\n                <div class='col-xs-9 col-sm-10'>\\n                    \\n                </div>\\n           </div>     \\n           <div class=\\\"row\\\">\\n                <div class='col-xs-3 col-sm-2'>\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label\\\" for=\\\"education\\\">Education: </label>\\n                    </div>\\n                </div>\\n                <div class='col-xs-9 col-sm-10'>\\n                    \\n                    <br/>\\n                    \\n                </div>\\n            </div> -->\\n        </div>\\n    </div>\\n    <div class=\\\"text-center\\\">\\n        <button class=\\\"btn btn-success btn-outline-rounded\\\" [disabled]=\\\"!isFormValid\\\" (click)=\\\"submit()\\\"> Submit <span style=\\\"margin-left:10px;\\\" class=\\\"glyphicon glyphicon-arrow-right\\\"></span></button>\\n    </div>\\n</div>\"","import { Component, OnInit, Input }   from '@angular/core';\n\nimport { FormData }                   from '../data/formData.model';\nimport { FormDataService }            from '../data/formData.service';\n\n@Component ({\n    selector:     'mt-wizard-result'\n    ,templateUrl: './result.component.html'\n})\n\nexport class ResultComponent implements OnInit {\n    title = 'Your are Just One Click Away From Submitting the Data!';\n    @Input() formData: FormData;\n    isFormValid: boolean = false;\n    \n    constructor(private formDataService: FormDataService) {\n    }\n\n    ngOnInit() {\n        this.formData = this.formDataService.getFormData();\n        this.isFormValid = this.formDataService.isFormValid();\n        console.log('You Have Successfully Submitted Your Data');\n    }\n\n    submit() {\n        alert('You Have Successfully Submitted Your Data');\n        this.formData = this.formDataService.resetFormData();\n        this.isFormValid = false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Login }            from '../login/login.model';\nimport { WorkflowService } from '../workflow/workflow.service';\nimport { STEPS }  from '../workflow/workflow.model';\nimport {Observable} from \"rxjs\"\nimport { environment } from '../../environments/environment';\n@Injectable()\nexport class LoginService {\n\n    baseUrl = environment.baseUrl\n    private login:Login;\n\tprivate API_URL: string = `${this.baseUrl}/api`;\n\tprivate headers = new HttpHeaders().set('Content-Type','application/json');\n\tconstructor(private http:HttpClient) { }\n\t\n\n     getlogin(credentials): Observable<Login> {\n     \treturn this.http.post<Login>(`${this.API_URL}/users/userLogin`, credentials);\n     }\n\n     logout(token) {\n        return this.http.get(`${this.API_URL}/users/userlogout/${token}`,{headers:this.headers});\n     }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { FormData, Personal, Work, Spouse, Dependants } from '../data/formData.model';\n\n// import { WorkflowService } from '../workflow/workflow.service';\n// import { STEPS }  from '../workflow/workflow.model';\nimport {Observable} from \"rxjs\"\nimport {map} from 'rxjs/operators'\nimport { Education } from '../education/education';\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class ProfileService {\n    baseUrl = environment.baseUrl\n    private personal:Personal;\n    private education: Education;\n    private dependants:Dependants;\n    private work:Work;\n    private spouse:Spouse;\n\tprivate API_URL: string = `${this.baseUrl}/api`;\n    // private accessToken:string = sessionStorage.getItem('token');\n\t// private headers = new HttpHeaders().set('Content-Type','application/json');\n\tconstructor(private http:HttpClient) { }\n\n\n\n\n\n\n    initRequestOptions() {\n        let token = sessionStorage.getItem('token');\n        let headers = {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'access_token': token\n        };\n        let headersConfig = new HttpHeaders(headers);\n        return headersConfig\n    }\n\t\n     \n\t readProfile(id): Observable<Personal> {\n        let options = this.initRequestOptions(); \n        return this.http.get<Personal>(`${this.API_URL}/personals/getPersonal/${id}`, {headers:options});\n     }\n\n     createProfile(id, personal): Observable<Personal> {\n        let options = this.initRequestOptions();\n     \treturn this.http.post<Personal>(`${this.API_URL}/personals/postPersonal/${id}`, personal ,{headers:options});\n     }\n     \n     readWork(id): Observable<Work> {\n        let options = this.initRequestOptions(); \n    \treturn this.http.get<Work>(`${this.API_URL}/works/getWork/${id}`,{headers:options});\n     }\n\n     createWork(id, work): Observable<Work> {\n        let options = this.initRequestOptions();\n     \treturn this.http.post<Work>(`${this.API_URL}/works/postWork/${id}`, work ,{headers:options});\n     }\n      readSpouse(id): Observable<Spouse> {\n        let options = this.initRequestOptions(); \n        return this.http.get<Spouse>(`${this.API_URL}/spouses/getSpouse/${id}`,{headers:options});\n     }\n\n     createSpouse(id, spouse): Observable<Spouse> {\n         let options = this.initRequestOptions();\n         return this.http.post<Spouse>(`${this.API_URL}/spouses/postSpouse/${id}`, spouse ,{headers:options});\n     }\n\n\t readEducation(id): Observable<Education> {\n        let options = this.initRequestOptions(); \n    \treturn this.http.get<Education>(`${this.API_URL}/education/getEducation/${id}`,{headers:options});\n     }\n\n     createEducation(userId,education): Observable<Education> {\n         let options = this.initRequestOptions();\n     \treturn this.http.post<Education>(`${this.API_URL}/education/postEducation/${userId}`, education ,{headers:options});\n     }\n     readDependants(id): Observable<Dependants> {\n        let options = this.initRequestOptions(); \n    \treturn this.http.get<Dependants>(`${this.API_URL}/dependants/getDependants/${id}`,{headers:options});\n     }\n\n     createDependants(id,dependants): Observable<Dependants> {\n        let options = this.initRequestOptions(); \n     \treturn this.http.post<Dependants>(`${this.API_URL}/dependants/postDependants/${id}`, dependants ,{headers:options});\n     }\n\t\n}\n\n\n","module.exports = \"<app-header></app-header>\\n<app-aislogo></app-aislogo>\\n<div class=\\\"container\\\">\\n    <div class=\\\"board\\\">\\n        <div class=\\\"tab-content\\\">\\n            <msw-navbar></msw-navbar>\\n            <form #spouseForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\n                <div class=\\\"tab-pane fade in active\\\">\\n                    <h6 class=\\\"head text-center\\\">{{title}}</h6>\\n                    <br/>\\n                    <div class='row'>\\n                        <div class='col-xs-offset-1 col-xs-10 col-sm-offset-2 col-sm-8 col-md-offset-1 col-md-10 col-lg-offset-1 col-lg-10'>\\n                            <div class=\\\"row clearfix text-center\\\">\\n                                <div class=\\\"form-group\\\">\\n                                     <input id=\\\"image\\\" type=\\\"file\\\" name=\\\"profile_photo\\\" placeholder=\\\"Photo\\\" class=\\\"profilePicEditorClass\\\" id = \\\"file\\\" (change)=\\\"handleFileInput($event)\\\">\\n                                    <!-- <img src=\\\"../../assets/images/Avatar.jpg\\\" class=\\\"img-circle\\\" alt=\\\"car\\\" width=\\\"150\\\" height=\\\"130\\\"> -->\\n                                     <img src= \\\"{{img_url}}\\\" class=\\\"img-circle\\\" alt=\\\"ProfPicture\\\" width=\\\"150\\\" height=\\\"130\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spousePrefix\\\">Prefix</label>\\n                                        <select class=\\\"form-control input-md\\\" id=\\\"spousePrefix\\\" required name=\\\"spousePrefix\\\" #spousePrefix=\\\"ngModel\\\" [(ngModel)]=\\\"spouse.spousePrefix\\\">\\n                                            <option value=\\\"\\\" disabled>Select Option</option>\\n                                            <option *ngFor=\\\"let pre of Prefix\\\" [id]=\\\"pre.id\\\" [value]=\\\"pre.prefix\\\">{{pre.prefix}}</option>\\n                                        </select>\\n                                        <div *ngIf=\\\"spousePrefix?.touched || spousePrefix?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spousePrefix.errors?.required\\\">Prefix Status Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spouseFullName\\\">spouse Full Name</label>\\n                                        <input class=\\\"form-control input-md\\\" #spouseFullName=\\\"ngModel\\\" required id=\\\"spouseFullName\\\" name=\\\"spouseFullName\\\" type=\\\"text\\\"\\n                                            placeholder=\\\"spouse Full Name\\\" [(ngModel)]=\\\"spouse.spouseFullName\\\">\\n                                        <div *ngIf=\\\"spouseFullName?.touched || spouseFullName?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spouseFullName.errors?.required\\\">full name is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spouseGender\\\">spouse Gender</label>\\n                                        <select class=\\\"form-control input-md\\\" id=\\\"spouseGender\\\" required name=\\\"spouseGender\\\" #spouseGender=\\\"ngModel\\\" [(ngModel)]=\\\"spouse.spouseGender\\\">\\n                                            <option value=\\\"\\\" disabled>Select Option</option>\\n                                            <option *ngFor=\\\"let gen of Gender\\\" [id]=\\\"gen.id\\\" [value]=\\\"gen.gender\\\">{{gen.gender}}</option>\\n                                        </select>\\n                                        <div *ngIf=\\\"spouseGender?.touched || spouseGender?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spouseGender.errors?.required\\\">Gender is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spouseDateOfBirth\\\">Date Of Birth</label>\\n                                        <input class=\\\"form-control input-md\\\" #spouseDateOfBirth=\\\"ngModel\\\" required id=\\\"spouseDateOfBirth\\\" name=\\\"spouseDateOfBirth\\\"\\n                                            type=\\\"date\\\" placeholder=\\\"Date Of Birth\\\" [(ngModel)]=\\\"spouse.spouseDateOfBirth\\\">\\n                                        <div *ngIf=\\\"spouseDateOfBirth?.touched || spouseDateOfBirth?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spouseDateOfBirth.errors?.required\\\">Gender is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spouseAdhaarNumber\\\">Adhaar Number</label>\\n                                        <input class=\\\"form-control input-md\\\" #spouseAdhaarNumber=\\\"ngModel\\\" required minlength=\\\"12\\\" maxlength=\\\"12\\\" pattern=\\\"[0-9]{12}\\\"\\n                                            id=\\\"spouseAdhaarNumber\\\" name=\\\"spouseAdhaarNumber\\\" type=\\\"text\\\" placeholder=\\\"Adhaar Number\\\"\\n                                            [(ngModel)]=\\\"spouse.spouseAdhaarNumber\\\">\\n                                        <div *ngIf=\\\"spouseAdhaarNumber?.touched || spouseAdhaarNumber?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spouseAdhaarNumber.errors?.required\\\">Adhaar Numberis Required</div>\\n                                            <div *ngIf=\\\"spouseAdhaarNumber.errors?.pattern\\\">Should have 16 Digit valid Number</div>\\n\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spouseNationality\\\">Nationality</label>\\n                                        <input class=\\\"form-control input-md\\\" #spouseNationality=\\\"ngModel\\\" required id=\\\"spouseNationality\\\" name=\\\"spouseNationality\\\"\\n                                            type=\\\"text\\\" placeholder=\\\"Nationality\\\" [(ngModel)]=\\\"spouse.spouseNationality\\\">\\n                                        <div *ngIf=\\\"spouseNationality?.touched || spouseNationality?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spouseNationality.errors?.required\\\">Nationality is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spouseEmail\\\">Email</label>\\n                                        <input class=\\\"form-control input-md\\\" #spouseEmail=\\\"ngModel\\\" required pattern=\\\"^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$\\\" id=\\\"spouseEmail\\\"\\n                                            name=\\\"spouseEmail\\\" type=\\\"text\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"spouse.spouseEmail\\\">\\n                                        <div *ngIf=\\\"spouseEmail?.touched || spouseEmail?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spouseEmail.errors?.required\\\">Email is Required</div>\\n                                            <div *ngIf=\\\"spouseEmail.errors?.pattern\\\">Invalid email</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spouseMobile\\\">Mobile Number</label>\\n                                        <input class=\\\"form-control input-md\\\" #spouseMobile=\\\"ngModel\\\" required minlength=\\\"10\\\" maxlength=\\\"10\\\" pattern=\\\"[0-9]{10}\\\" id=\\\"spouseMobile\\\"\\n                                            name=\\\"spouseMobile\\\" type=\\\"text\\\" placeholder=\\\"Mobile Number\\\" [(ngModel)]=\\\"spouse.spouseMobile\\\">\\n                                        <div *ngIf=\\\"spouseMobile?.touched || spouseMobile?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spouseMobile.errors?.required\\\">MobileNumberis Required</div>\\n                                            <div *ngIf=\\\"spouseMobile.errors?.pattern\\\">Should have 10 Digit valid Number</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <!-- <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spousePhoto\\\">Photo</label>\\n                                        <input class=\\\"form-control input-md\\\" #spousePhoto=\\\"ngModel\\\" required id=\\\"spousePhoto\\\" name=\\\"spousePhoto\\\" type=\\\"file\\\" placeholder=\\\"Photo\\\"\\n                                            [(ngModel)]=\\\"spouse.spousePhoto\\\">\\n                                        <div *ngIf=\\\"spousePhoto?.touched || spousePhoto?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spousePhoto.errors?.required\\\">Photo is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div> -->\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spouseEmployment\\\">Employment</label>\\n                                        <select class=\\\"form-control input-md\\\" id=\\\"spouseEmployment\\\" required name=\\\"service\\\" (change)=\\\"selectChangeHandler($event)\\\"\\n                                            #spouseEmployment=\\\"ngModel\\\" [(ngModel)]=\\\"spouse.spouseEmployment\\\">\\n                                            <option value=\\\"\\\" disabled>Select Employment</option>\\n                                            <option value=\\\"Constitutional posts\\\">Constitutional posts</option>\\n                                            <option value=\\\"Employed\\\">Employed</option>\\n                                            <option value=\\\"Retired\\\">Retired</option>\\n                                            <option value=\\\"Not employed\\\">Not employed</option>\\n                                        </select>\\n                                        <div *ngIf=\\\"spouseEmployment?.touched || spouseEmployment?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spouseEmployment.errors?.required\\\">Employment is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <!-- if Constitutional Employed -->\\n                            <div class=\\\"row\\\" *ngIf=\\\"constitutional\\\">\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spouseConstitutionalPost\\\">Spouse post</label>\\n                                        <select class=\\\"form-control input-md\\\" id=\\\"spouseConstitutionalPost\\\" required name=\\\"spouseConstitutionalPost\\\" #spouseConstitutionalPost=\\\"ngModel\\\"\\n                                            [(ngModel)]=\\\"spouse.spouseConstitutionalPost\\\">\\n                                            <option value=\\\"\\\" disabled>Select Option</option>\\n                                            <option value=\\\"Minister\\\">Minister</option>\\n                                            <option value=\\\"MP\\\">MP</option>\\n                                            <option value=\\\"MLA\\\">MLA</option>\\n                                            <option value=\\\"IFS\\\">Judges</option>\\n                                            <option value=\\\"IFS\\\">IFS</option>\\n                                        </select>\\n                                        <div *ngIf=\\\"spouseConstitutionalPost?.touched || spouseConstitutionalPost?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spouseConstitutionalPost.errors?.required\\\">Service is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <!-- if Constitutional Employed -->\\n                            <div class=\\\"row\\\">\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6' *ngIf=\\\"employed\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spouseEmploymentType\\\">Employment Type</label>\\n                                        <select class=\\\"form-control input-md\\\" id=\\\"spouseEmploymentType\\\" required name=\\\"spouseEmploymentType\\\" (change)=\\\"jobTypeHandler($event)\\\"\\n                                            #spouseEmploymentType=\\\"ngModel\\\" [(ngModel)]=\\\"spouse.spouseEmploymentType\\\">\\n                                            <option value=\\\"\\\" disabled>Select Employment Type</option>\\n                                            <option value=\\\"AIS\\\">AIS</option>\\n                                            <option value=\\\"Central GovernmentOrPSU\\\">Central Government/PSU</option>\\n                                            <option value=\\\"State GovernmentOrPSU\\\">State Government/PSU</option>\\n                                            <option value=\\\"PrivateInIndia\\\">Private (in India) </option>\\n                                            <option value=\\\"Self Employed\\\">Self Employed </option>\\n                                            <option value=\\\"PrivateOutSide\\\">Private (outside India) </option>\\n                                        </select>\\n                                        <div *ngIf=\\\"spouseEmploymentType?.touched || spouseEmploymentType?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spouseEmploymentType.errors?.required\\\">Employment type is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6' *ngIf=\\\"aisService\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spouseService\\\">Spouse Service</label>\\n                                        <select class=\\\"form-control input-md\\\" id=\\\"spouseService\\\" required name=\\\"spouseService\\\" #spouseService=\\\"ngModel\\\" [(ngModel)]=\\\"spouse.spouseService\\\">\\n                                            <option value=\\\"\\\" disabled>Select Option</option>\\n                                            <option *ngFor=\\\"let ser of Service\\\" [id]=\\\"ser.id\\\" [value]=\\\"ser.service\\\">{{ser.service}}</option> \\n                                        </select>    \\n                                        <div *ngIf=\\\"spouseService?.touched || spouseService?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spouseService.errors?.required\\\">Service is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <!-- if AIS Employed Compleated -->\\n                            <div class=\\\"row\\\" *ngIf=\\\"aisService\\\">\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spouseCadre\\\">Cadre</label>\\n                                        <select class=\\\"form-control input-md\\\" id=\\\"spouseCadre\\\" required name=\\\"spouseCadre\\\" #spouseCadre=\\\"ngModel\\\" [(ngModel)]=\\\"spouse.spouseCadre\\\">\\n                                            <option value=\\\"\\\" disabled>Cadre</option>\\n                                            <option value=\\\"Kerala\\\">Kerala</option>\\n                                            <option value=\\\"Other\\\">Other</option>\\n                                        </select>\\n                                        <div *ngIf=\\\"spouseCadre?.touched || spouseCadre?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spouseCadre.errors?.required\\\">Cadre is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spouseBatch\\\">Batch</label>\\n                                        <input class=\\\"form-control input-md\\\" #spouseBatch=\\\"ngModel\\\" required id=\\\"spouseBatch\\\" name=\\\"spouseBatch\\\" type=\\\"text\\\" placeholder=\\\"Batch\\\"\\n                                            [(ngModel)]=\\\"spouse.spouseBatch\\\">\\n                                        <div *ngIf=\\\"spouseBatch?.touched || spouseBatch?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spouseBatch.errors?.required\\\">Batch is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\" *ngIf=\\\"aisService\\\">\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spouseDateOfAllotment\\\">Date of allotment of service</label>\\n                                        <input class=\\\"form-control input-md\\\" #spouseDateOfAllotment=\\\"ngModel\\\" required id=\\\"spouseDateOfAllotment\\\" name=\\\"spouseDateOfAllotment\\\"\\n                                            type=\\\"date\\\" placeholder=\\\"Date of allotment of service\\\" [(ngModel)]=\\\"spouse.spouseDateOfAllotment\\\">\\n                                        <div *ngIf=\\\"spouseDateOfAllotment?.touched || spouseDateOfAllotment?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spouseDateOfAllotment.errors?.required\\\">Date of allotment is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spouseIdentityNumber\\\">Identity Number</label>\\n                                        <input class=\\\"form-control input-md\\\" #spouseIdentityNumber=\\\"ngModel\\\" required id=\\\"spouseIdentityNumber\\\" name=\\\"spouseIdentityNumber\\\"\\n                                            type=\\\"text\\\" placeholder=\\\"Identity Number\\\" [(ngModel)]=\\\"spouse.spouseIdentityNumber\\\">\\n                                        <div *ngIf=\\\"spouseIdentityNumber?.touched || spouseIdentityNumber?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spouseIdentityNumber.errors?.required\\\">Identity Numberis Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <!-- if AIS Employed Compleated -->\\n                            <!-- if Employed Central -->\\n                            <div class=\\\"row\\\" *ngIf=\\\"central\\\">\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spousePost\\\">Post</label>\\n                                        <input class=\\\"form-control input-md\\\" #spousePost=\\\"ngModel\\\" required id=\\\"spousePost\\\" name=\\\"spousePost\\\" type=\\\"text\\\" placeholder=\\\"Post\\\"\\n                                            [(ngModel)]=\\\"spouse.spousePost\\\">\\n                                        <div *ngIf=\\\"spousePost?.touched || spousePost?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spousePost.errors?.required\\\">Post is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spouseMinistry\\\">Ministry</label>\\n                                        <input class=\\\"form-control input-md\\\" #spouseMinistry=\\\"ngModel\\\" required id=\\\"spouseMinistry\\\" name=\\\"spouseMinistry\\\" type=\\\"text\\\"\\n                                            placeholder=\\\"Ministry\\\" [(ngModel)]=\\\"spouse.spouseMinistry\\\">\\n                                        <div *ngIf=\\\"spouseMinistry?.touched || spouseMinistry?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spouseMinistry.errors?.required\\\">Ministry is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\" *ngIf=\\\"central\\\">\\n                                <div class='col-xs-12 col-sm-12 col-md-4 col-lg-4'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spouseDepartment\\\">Department</label>\\n                                        <input class=\\\"form-control input-md\\\" #spouseDepartment=\\\"ngModel\\\" required id=\\\"spouseDepartment\\\" name=\\\"spouseDepartment\\\" type=\\\"text\\\"\\n                                            placeholder=\\\"Department\\\" [(ngModel)]=\\\"spouse.spouseDepartment\\\">\\n                                        <div *ngIf=\\\"spouseDepartment?.touched || spouseDepartment?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spouseDepartment.errors?.required\\\">Department is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class='col-xs-12 col-sm-12 col-md-4 col-lg-4'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spouseOrganization\\\">Organization</label>\\n                                        <input class=\\\"form-control input-md\\\" #spouseOrganization=\\\"ngModel\\\" required id=\\\"spouseOrganization\\\" name=\\\"spouseOrganization\\\"\\n                                            type=\\\"text\\\" placeholder=\\\"Organization\\\" [(ngModel)]=\\\"spouse.spouseOrganization\\\">\\n                                        <div *ngIf=\\\"spouseOrganization?.touched || spouseOrganization?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spouseOrganization.errors?.required\\\">Organization is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class='col-xs-12 col-sm-12 col-md-4 col-lg-4'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spouseIdentityNumberRetired\\\">Identity Number</label>\\n                                        <input class=\\\"form-control input-md\\\" #spouseIdentityNumberRetired=\\\"ngModel\\\" required id=\\\"spouseIdentityNumberRetired\\\" name=\\\"spouseIdentityNumberRetired\\\"\\n                                            type=\\\"text\\\" placeholder=\\\"Identity Number\\\" [(ngModel)]=\\\"spouse.spouseIdentityNumberRetired\\\">\\n                                        <div *ngIf=\\\"spouseIdentityNumberRetired?.touched || spouseIdentityNumberRetired?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spouseIdentityNumberRetired.errors?.required\\\">Identity Number is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <!-- if Employed Central -->\\n                            <!-- if Employed State -->\\n                            <div class=\\\"row\\\" *ngIf=\\\"state\\\">\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spousePostState\\\">Post</label>\\n                                        <input class=\\\"form-control input-md\\\" #spousePostState=\\\"ngModel\\\" required id=\\\"spousePostState\\\" name=\\\"spousePostState\\\" type=\\\"text\\\"\\n                                            placeholder=\\\"Post\\\" [(ngModel)]=\\\"spouse.spousePostState\\\">\\n                                        <div *ngIf=\\\"spousePostState?.touched || spousePostState?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spousePostState.errors?.required\\\">Post is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class='col-xs-12 col-sm-12 col-md-6 col-lg-6'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spouseMinistryState\\\">Ministry</label>\\n                                        <input class=\\\"form-control input-md\\\" #spouseMinistryState=\\\"ngModel\\\" required id=\\\"spouseMinistryState\\\" name=\\\"spouseMinistryState\\\"\\n                                            type=\\\"text\\\" placeholder=\\\"Ministry\\\" [(ngModel)]=\\\"spouse.spouseMinistryState\\\">\\n                                        <div *ngIf=\\\"spouseMinistryState?.touched || spouseMinistryState?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spouseMinistryState.errors?.required\\\">Ministry is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\" *ngIf=\\\"state\\\">\\n                                <div class='col-xs-12 col-sm-12 col-md-4 col-lg-4'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spouseDepartmentState\\\">Department</label>\\n                                        <input class=\\\"form-control input-md\\\" #spouseDepartmentState=\\\"ngModel\\\" required id=\\\"spouseDepartmentState\\\" name=\\\"spouseDepartmentState\\\"\\n                                            type=\\\"text\\\" placeholder=\\\"Department\\\" [(ngModel)]=\\\"spouse.spouseDepartmentState\\\">\\n                                        <div *ngIf=\\\"spouseDepartmentState?.touched || spouseDepartmentState?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spouseDepartmentState.errors?.required\\\">Department is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class='col-xs-12 col-sm-12 col-md-4 col-lg-4'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spouseOrganizationState\\\">Organization</label>\\n                                        <input class=\\\"form-control input-md\\\" #spouseOrganizationState=\\\"ngModel\\\" required id=\\\"spouseOrganizationState\\\" name=\\\"spouseOrganizationState\\\"\\n                                            type=\\\"text\\\" placeholder=\\\"Organization\\\" [(ngModel)]=\\\"spouse.spouseOrganizationState\\\">\\n                                        <div *ngIf=\\\"spouseOrganizationState?.touched || spouseOrganizationState?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spouseOrganizationState.errors?.required\\\">Organization is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class='col-xs-12 col-sm-12 col-md-4 col-lg-4'>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"spousePen\\\">PEN </label>\\n                                        <input class=\\\"form-control input-md\\\" #spousePen=\\\"ngModel\\\" required id=\\\"spousePen\\\" name=\\\"spousePen\\\" type=\\\"text\\\" placeholder=\\\"Organization\\\"\\n                                            [(ngModel)]=\\\"spouse.spousePen\\\">\\n                                        <div *ngIf=\\\"spousePen?.touched || spousePen?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"spousePen.errors?.required\\\">PEN is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <!-- if Employed State -->\\n                            <div class=\\\"form-group text-center\\\">\\n                                <!-- <button class=\\\"btn btn-outline-rounded btn-default\\\" (click)=\\\"goToPrevious(spouseForm)\\\">\\n                        <span style=\\\"margin-right:10px;\\\" class=\\\"glyphicon glyphicon-arrow-left\\\"></span> Previous</button> -->\\n                                <button class=\\\"btn btn-outline-rounded btn-info\\\" [disabled]=\\\"!spouseForm.valid\\\" (click)=\\\"goToNext(spouseForm)\\\"> Submit\\n                                    <span style=\\\"margin-left:10px;\\\" class=\\\"glyphicon glyphicon-arrow-right\\\"></span>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit }   from '@angular/core';\nimport { Router }              from '@angular/router';\nimport { Spouse }            from '../data/formData.model';\nimport { ProfileService }     from '../shared/profile.service';\nimport { HttpClient,HttpHeaders} from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n@Component ({\n    selector:     'mt-wizard-spouse'\n    ,templateUrl: './spouse.component.html'\n})\n\nexport class SpouseComponent implements OnInit {\n\n    baseUrl = environment.baseUrl\n    title = 'Spouse Info';\n    form: any;\n    Prefix:any[];\n    Gender:any[];\n    Service:any[];\n    private spouse: Spouse = new Spouse();\n    selectedFile:File = null;\n    private headers = new HttpHeaders().set('Content-Type','application/json');\n    private img_url:string =  `../..${this.baseUrl}/assets/images/Avatar.jpg`; \n    constructor(private router: Router, private _profileService: ProfileService,private http:HttpClient) {\n    }\n\n    ngOnInit() {\n       const id = sessionStorage.getItem('userId'); \n       if(!id){\n           this.router.navigate(['/login']); \n        }\n        this.readSpouse(id);\n        this.getSpousePic(id);\n        this.getPrefixCombo();\n        this.getGenderCombo();\n        this.getServiceCombo();\n    }\n\n    getPrefixCombo(){\n        this.http.get<any>(`${this.baseUrl}/api/Prefixes`, { headers: this.headers})\n        .subscribe(res =>{\n            this.Prefix = res;\n        },\n        err =>{\n           alert('error while getiing prefix');\n        }); \n    }\n\n     getGenderCombo(){\n        this.http.get<any>(`${this.baseUrl}/api/Genders`, { headers: this.headers})\n        .subscribe(res =>{\n            this.Gender = res;\n        },\n        err =>{\n           alert('error while getiing Gender');\n        }); \n    }\n    getServiceCombo(){\n        this.http.get<any>(`${this.baseUrl}/api/Services`, { headers: this.headers})\n        .subscribe(res =>{\n            this.Service = res;\n        },\n        err =>{\n           alert('error while getiing Gender');\n        }); \n    }\n\n    handleFileInput(event) {\n        const id = sessionStorage.getItem('userId');\n        const fd = new FormData();\n        this.selectedFile = <File>event.target.files[0];\n        fd.append('image',this.selectedFile,this.selectedFile.name);\n        // this.http.post<File>(`/api/users/${id}/uploadDisplayPic`, fd)\n        // this.http.post<File>(`${this.baseUrl}/api/containers/spouse-${id}/upload`,fd)\n        //     .subscribe(res =>{\n        //         console.log(res);\n        //         this.getSpousePic(id);\n        //     });\n\n        if(this.selectedFile.type == \"image/png\" || this.selectedFile.type == \"image/jpeg\" ){\n            this.http.post<File>(`${this.baseUrl}/api/containers/spouse-${id}/upload`,fd)\n            .subscribe(res => {\n                console.log(res);\n                this.getSpousePic(id);\n            });\n        }\n        else{\n            alert(\"upload valid jpg/png\");    \n        }\n    }\n\n    getSpousePic(id){\n       this.http.get<File>(`${this.baseUrl}/api/containers/spouse-${id}/files`,{headers:this.headers})\n        .subscribe(res =>{\n            var arr:any = res;\n            if(arr.length == 0){\n                this.img_url = `../..${this.baseUrl}/assets/images/Avatar.jpg`; \n            }\n            else{\n            const file_id = arr[arr.length-1]._id;\n            this.img_url = `${this.baseUrl}/api/containers/spouse-${id}/download/${file_id}`;\n           }\n        },\n        err => {\n           this.img_url = `../..${this.baseUrl}/assets/images/Avatar.jpg`; \n        }); \n        console.log('img url set:'+ this.img_url)\n    }\n\n    readSpouse(id){\n        this._profileService\n        .readSpouse(id)\n        .subscribe(data => {\n            if(!data){\n               this.spouse = new Spouse();\n            }\n            else{\n               this.spouse = data;    \n            }\n        }, err => {\n            alert('failed');\n        })\n    }\n\n    save(form: any): any {\n        if (!form.valid) {\n            return false;\n        }\n        const id = sessionStorage.getItem('userId');   \n        this._profileService.createSpouse(id,this.spouse).subscribe(\n            data=>{\n                console.log(data);\n            },err=>{\n                console.log(err);\n            }\n         )\n        return true;\n    }\n\n    goToNext(form: any) {\n        if (this.save(form)) {\n            // Navigate to the work page\n            this.router.navigate(['/education']);\n        }\n    }\n    selectedPrefix: string='';\n    selectedValue: string='';\n    constitutional: boolean = false;\n    employed:boolean = false;\n    aisService: boolean = false;\n    central: boolean = false;\n    state:boolean = false;  \n    selectChangeHandler (event:any){\n        this.selectedPrefix = event.target.value;\n        /*alert(this.selectedPrefix);*/\n        if (this.selectedPrefix == 'Constitutional posts') { \n            this.constitutional = true;\n            this.employed = false;\n         }else if (this.selectedPrefix == 'Employed') {\n            this.employed = true;\n            this.constitutional = false;\n         }else if (this.selectedPrefix == 'Retired') {\n            this.constitutional = false;\n            this.employed = true;\n         }else if (this.selectedPrefix == 'Not Employed') {\n            this.constitutional = false;\n            this.employed = false;\n         }\n         \n    }\n    jobTypeHandler(event:any){\n        this.selectedValue = event.target.value;\n       /* alert(this.selectedValue);*/\n        if (this.selectedValue == 'AIS') { \n            this.aisService = true;\n            this.central = false;\n            this.employed = false;\n         }if (this.selectedValue == 'Central GovernmentOrPSU') { \n            this.central = true;\n            this.state = false;\n            this.aisService = false;\n         }if (this.selectedValue == 'State GovernmentOrPSU') { \n            this.state = true;\n            this.aisService = false;\n            this.central = false;\n         }\n\n    }\n}\n","module.exports = \"<app-header></app-header>\\n<app-aislogo></app-aislogo>\\n<div class=\\\"container\\\">\\n    <div class=\\\"board\\\">\\n        <div class=\\\"tab-content\\\">\\n            <msw-navbar></msw-navbar>\\n            <form #workForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\n                <div class=\\\"tab-pane fade in active\\\">\\n                    <h4 class=\\\"head text-center\\\">{{title}}</h4>\\n                    <br/>\\n                    <div class='row'>\\n                        <div class='col-xs-offset-1 col-xs-10 col-sm-offset-2 col-sm-8 col-md-offset-1 col-md-10 col-lg-offset-1 col-lg-10'>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"workService\\\">Service</label>\\n                                        <select class=\\\"form-control input-md\\\" id=\\\"workService\\\" required name=\\\"workService\\\"\\n                                         #workService=\\\"ngModel\\\" [(ngModel)]=\\\"work.workService\\\"  (change)=\\\"selectComboHandler($event)\\\">\\n                                         <option value=\\\"\\\" disabled>Select Option</option>\\n                                        <option *ngFor=\\\"let ser of Service\\\" [id]=\\\"ser.id\\\" [value]=\\\"ser.service\\\">{{ser.service}}</option>\\n                                        </select>\\n                                        <div *ngIf=\\\"workService?.touched || workService?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"workService.errors?.required\\\">Service Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"cadre\\\">Cadre</label>\\n                                        <select class=\\\"form-control input-md\\\" id=\\\"cadre\\\" required name=\\\"cadre\\\" \\n                                        #cadre=\\\"ngModel\\\" [(ngModel)]=\\\"work.cadre\\\">\\n                                        <option value=\\\"\\\" disabled>Select Option</option>\\n                                        <option *ngFor=\\\"let cad of Cadre\\\" [id]=\\\"cad.id\\\" [value]=\\\"cad.cadre\\\">{{cad.cadre}}</option>\\n                                        </select>\\n                                        <div *ngIf=\\\"cadre?.touched || cadre?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"cadre.errors?.required\\\">Cadre Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"batch\\\">Batch</label>\\n                                        <input class=\\\"form-control input-md\\\" #batch=\\\"ngModel\\\" required id=\\\"batch\\\" name=\\\"batch\\\" type=\\\"text\\\" placeholder=\\\"Batch\\\" [(ngModel)]=\\\"work.batch\\\">\\n                                        <div *ngIf=\\\"batch?.touched || batch?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"batch.errors?.required\\\">Batch Required</div>\\n                                            <div *ngIf=\\\"batch.errors?.pattern\\\">Invalid Batch</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"dateOfAllotment\\\">Date of allotment of service</label>\\n                                        <input class=\\\"form-control input-md\\\" #dateOfAllotment=\\\"ngModel\\\" required id=\\\"dateOfAllotment\\\" name=\\\"dateOfAllotment\\\" type=\\\"date\\\"\\n                                            placeholder=\\\"Date of allotment of service\\\" [(ngModel)]=\\\"work.dateOfAllotment\\\">\\n                                        <div *ngIf=\\\"dateOfAllotment?.touched || dateOfAllotment?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"dateOfAllotment.errors?.required\\\">Date Of Allotment Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"identityNumber\\\">Identity Number</label>\\n                                        <input class=\\\"form-control input-md\\\" #identityNumber=\\\"ngModel\\\" required maxlength=\\\"10\\\" pattern=\\\"[0-9]{6,10}\\\" id=\\\"identityNumber\\\"\\n                                            name=\\\"identityNumber\\\" minlength=\\\"6\\\" max-length=\\\"10\\\" type=\\\"text\\\" placeholder=\\\"Identity Number\\\"\\n                                            [(ngModel)]=\\\"work.identityNumber\\\">\\n                                        <div *ngIf=\\\"identityNumber?.touched || identityNumber?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"identityNumber.errors?.required\\\">Identity Number Required</div>\\n                                            <div *ngIf=\\\"identityNumber.errors?.pattern\\\">Should have 6 to 10 Digits</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"modeOfRecruitment\\\">Mode of recruitment</label>\\n                                        <select class=\\\"form-control input-md\\\" id=\\\"modeOfRecruitment\\\" required name=\\\"modeOfRecruitment\\\" #modeOfRecruitment=\\\"ngModel\\\"\\n                                            [(ngModel)]=\\\"work.modeOfRecruitment\\\">\\n                                            <option value=\\\"\\\" disabled>Select Option</option>\\n                                            <option *ngFor=\\\"let rec of isRecruitment\\\" [id]=\\\"rec.id\\\" [value]=\\\"rec.recruitment\\\">{{rec.recruitment}}</option>\\n\\n                                        </select>\\n                                        <div *ngIf=\\\"modeOfRecruitment?.touched || modeOfRecruitment?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"modeOfRecruitment.errors?.required\\\">Mode Of Recruitment Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"state\\\">State</label>\\n                                        <select class=\\\"form-control input-md\\\" id=\\\"state\\\" required name=\\\"state\\\" #state=\\\"ngModel\\\" [(ngModel)]=\\\"work.state\\\">\\n                                                <option value=\\\"\\\" disabled>Select Option</option>\\n                                                <option *ngFor=\\\"let sta of State\\\" [id]=\\\"sta.id\\\"\\n                                                 [value]=\\\"sta.state\\\">{{sta.state}}</option>\\n                                        </select>\\n                                        <div *ngIf=\\\"state?.touched || state?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"state.errors?.required\\\">State Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"district\\\">District</label>\\n                                        <input class=\\\"form-control input-md\\\" #district=\\\"ngModel\\\" required id=\\\"district\\\" name=\\\"district\\\" type=\\\"text\\\" placeholder=\\\"Districte\\\"\\n                                            [(ngModel)]=\\\"work.district\\\">\\n                                        <div *ngIf=\\\"district?.touched || district?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"district.errors?.required\\\">District Required </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"hometown\\\">Home Town</label>\\n                                        <input class=\\\"form-control input-md\\\" #hometown=\\\"ngModel\\\" required id=\\\"hometown\\\" name=\\\"hometown\\\" type=\\\"text\\\" placeholder=\\\"Home Town\\\"\\n                                            [(ngModel)]=\\\"work.hometown\\\">\\n                                        <div *ngIf=\\\"hometown?.touched || hometown?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"hometown.errors?.required\\\">Home Town Required </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                                <!-- <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\" for=\\\"motherTongue\\\">Mother Tongue</label>  \\n                                <input class=\\\"form-control input-md\\\" #motherTongue=\\\"ngModel\\\" required id=\\\"motherTongue\\\" name=\\\"motherTongue\\\" type=\\\"text\\\" placeholder=\\\"Mother Tongue\\\" [(ngModel)]=\\\"work.motherTongue\\\">   \\n                                <div *ngIf = \\\"motherTongue?.touched || motherTongue?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                    <div *ngIf = \\\"motherTongue.errors?.required\\\">Mother Tongue Required </div>\\n                                </div>\\n                            </div>\\n                        </div>   -->\\n                                <!-- <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\" for=\\\"scaleOfPay\\\">Grade/Scale of Pay</label> leave\\n                                <input class=\\\"form-control input-md\\\" #scaleOfPay=\\\"ngModel\\\" required id=\\\"sleavealeOfPay\\\" name=\\\"scaleOfPay\\\" type=\\\"text\\\" placeholder=\\\"Grade/Scale of Pay\\\" [(ngModel)]=\\\"work.scaleOfPay\\\">   \\n                                <div *ngIf = \\\"scaleOfPay?.touched || scaleOfPay?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                    <div *ngIf = \\\"scaleOfPay.errors?.required\\\">Scale Of Pay Required</div>\\n                                </div>\\n                            </div>\\n                        </div> -->\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"specialPay\\\">Special Pay</label>\\n                                        <input class=\\\"form-control input-md\\\" #specialPay=\\\"ngModel\\\" required id=\\\"specialPay\\\" name=\\\"specialPay\\\" type=\\\"text\\\" placeholder=\\\"Special Pay\\\"\\n                                            [(ngModel)]=\\\"work.specialPay\\\">\\n                                        <div *ngIf=\\\"specialPay?.touched || specialPay?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"specialPay.errors?.required\\\">Special Pay Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"scaleOfPay\\\">Grade/Scale of Pay</label>\\n                                        <select class=\\\"form-control input-md\\\" #scaleOfPay=\\\"ngModel\\\" required id=\\\"scaleOfPay\\\" name=\\\"scaleOfPay\\\" type=\\\"text\\\" placeholder=\\\"Grade/Scale of Pay\\\"\\n                                            [(ngModel)]=\\\"work.scaleOfPay\\\">\\n                                            <option value=\\\"\\\" disabled>Select Option</option>\\n                                            <option *ngFor=\\\"let scale of isGrade\\\" [id]=\\\"scale.id\\\" [value]=\\\"scale.grade\\\">{{scale.grade}}</option>\\n                                        </select>\\n                                        <div *ngIf=\\\"scaleOfPay?.touched || scaleOfPay?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"scaleOfPay.errors?.required\\\">Scale Of Pay Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"position\\\">Position</label>\\n                                        <select class=\\\"form-control input-md\\\" id=\\\"position\\\" required name=\\\"position\\\" #position=\\\"ngModel\\\" [(ngModel)]=\\\"work.position\\\"\\n                                            (change)=\\\"selectChangeHandler($event)\\\">\\n                                            <option value=\\\"\\\" disabled>Select Option</option>\\n                                            <option *ngFor=\\\"let pos of Position\\\" [id]=\\\"pos.id\\\" [value]=\\\"pos.position\\\">{{pos.position}}</option>\\n                                        </select>\\n                                        <div *ngIf=\\\"position?.touched || position?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"position.errors?.required\\\">Position Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\" *ngIf='workState'>\\n                                <h4>for 1 and 2</h4>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"nameOfPost\\\">Name of Post</label>\\n                                        <input class=\\\"form-control input-md\\\" #nameOfPost=\\\"ngModel\\\" required id=\\\"nameOfPost\\\" name=\\\"nameOfPost\\\" type=\\\"text\\\" placeholder=\\\"Name of Post\\\"\\n                                            [(ngModel)]=\\\"work.nameOfPost\\\">\\n                                        <div *ngIf=\\\"nameOfPost?.touched || nameOfPost?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"nameOfPost.errors?.required\\\">Name Of Post Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"departmentOrPsu\\\">Department/PSU</label>\\n                                        <input class=\\\"form-control input-md\\\" #departmentOrPsu=\\\"ngModel\\\" required id=\\\"departmentOrPsu\\\" name=\\\"departmentOrPsu\\\" type=\\\"text\\\"\\n                                            placeholder=\\\"Department/PSU\\\" [(ngModel)]=\\\"work.departmentOrPsu\\\">\\n                                        <div *ngIf=\\\"departmentOrPsu?.touched || departmentOrPsu?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"departmentOrPsu.errors?.required\\\">Department/Psu Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"pinCode\\\">Postal Address-PIN</label>\\n                                        <input class=\\\"form-control input-md\\\" #pinCode=\\\"ngModel\\\" required pattern=\\\"[0-9]{6}\\\" id=\\\"pinCode\\\" name=\\\"pinCode\\\" type=\\\"text\\\"\\n                                            placeholder=\\\"Pin Code\\\" [(ngModel)]=\\\"work.pinCode\\\">\\n                                        <div *ngIf=\\\"pinCode?.touched || pinCode?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"pinCode.errors?.required\\\">Pin-Code Required</div>\\n                                            <div *ngIf=\\\"pinCode.errors?.pattern\\\">Invalid Pin-Code</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\" *ngIf='workState'>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"officeTel\\\">Office Tel</label>\\n                                        <input class=\\\"form-control input-md\\\" #officeTel=\\\"ngModel\\\" required pattern=\\\"[0-9]{11}\\\" id=\\\"officeTel\\\" name=\\\"officeTel\\\" type=\\\"text\\\"\\n                                            placeholder=\\\"Office Tel\\\" [(ngModel)]=\\\"work.officeTel\\\">\\n                                        <div *ngIf=\\\"officeTel?.touched || officeTel?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"officeTel.errors?.required\\\">officeTel Required</div>\\n                                            <div *ngIf=\\\"officeTel.errors?.pattern\\\">Invalid Office Tel. Number</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"workMobile\\\">Mobile</label>\\n                                        <input class=\\\"form-control input-md\\\" #workMobile=\\\"ngModel\\\" required minlength=\\\"10\\\" maxlength=\\\"10\\\" pattern=\\\"[0-9]{10}\\\" id=\\\"workMobile\\\"\\n                                            name=\\\"workMobile\\\" type=\\\"text\\\" placeholder=\\\"Mobile\\\" [(ngModel)]=\\\"work.workMobile\\\">\\n                                        <div *ngIf=\\\"workMobile?.touched || workMobile?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"workMobile.errors?.required\\\">Mobile Required</div>\\n                                            <div *ngIf=\\\"workMobile.errors?.pattern\\\">Should have 10 Digits</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"workEmail\\\">Email</label>\\n                                        <input class=\\\"form-control input-md\\\" #workEmail=\\\"ngModel\\\" required pattern=\\\"^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$\\\" id=\\\"workEmail\\\"\\n                                            name=\\\"workEmail\\\" type=\\\"text\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"work.workEmail\\\">\\n                                        <div *ngIf=\\\"workEmail?.touched || workEmail?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"workEmail.errors?.required\\\">Email Required</div>\\n                                            <div *ngIf=\\\"workEmail.errors?.pattern\\\">Invalid Email</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\" *ngIf='workState'>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"officeFax\\\">Office Fax</label>\\n                                        <input class=\\\"form-control input-md\\\" #officeFaxStateEx=\\\"ngModel\\\" required id=\\\"officeFaxStateEx\\\" name=\\\"officeFaxStateEx\\\" type=\\\"text\\\"\\n                                            placeholder=\\\"Office Fax\\\" [(ngModel)]=\\\"work.officeFaxStateEx\\\">\\n                                        <div *ngIf=\\\"officeFax?.touched || officeFax?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"officeFax.errors?.required\\\">officeFax Required</div>\\n                                            <div *ngIf=\\\"officeFax.errors?.pattern\\\">Invalid Office Fax.</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"residencePh\\\">Residence Ph</label>\\n                                        <input class=\\\"form-control input-md\\\" #residencePh=\\\"ngModel\\\" required pattern=\\\"[0-9]{11}\\\" id=\\\"residencePh\\\" name=\\\"residencePh\\\"\\n                                            type=\\\"text\\\" placeholder=\\\"Residence Ph\\\" [(ngModel)]=\\\"work.residencePh\\\">\\n                                        <div *ngIf=\\\"residencePh?.touched || residencePh?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"residencePh.errors?.required\\\">Residence Phone Required</div>\\n                                            <div *ngIf=\\\"residencePh.errors?.pattern\\\">Invalid Phone Number</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"residenceAddress\\\">Residence Address</label>\\n                                        <textarea class=\\\"form-control input-md\\\" #residenceAddress=\\\"ngModel\\\" id=\\\"residenceAddress\\\" name=\\\"residenceAddress\\\" type=\\\"text\\\"\\n                                            placeholder=\\\"Residence Address\\\" [(ngModel)]=\\\"work.residenceAddress\\\"></textarea>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\" *ngIf='central'>\\n                                <h4>for Central Deputation</h4>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"startCentralDeputation\\\">Date of starting the Central Deputation</label>\\n                                        <input class=\\\"form-control input-md\\\" #startCentralDeputation=\\\"ngModel\\\" required id=\\\"startCentralDeputation\\\" name=\\\"startCentralDeputation\\\"\\n                                            type=\\\"date\\\" placeholder=\\\"Starting Date\\\" [(ngModel)]=\\\"work.startCentralDeputation\\\">\\n                                        <div *ngIf=\\\"startCentralDeputation?.touched || startCentralDeputation?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"startCentralDeputation.errors?.required\\\">start Central Deputation Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"ministryOrDepartmentOrPsu\\\">Ministry/Department/PSU</label>\\n                                        <input class=\\\"form-control input-md\\\" #ministryOrDepartmentOrPsu=\\\"ngModel\\\" required id=\\\"ministryOrDepartmentOrPsu\\\" name=\\\"ministryOrDepartmentOrPsu\\\"\\n                                            type=\\\"text\\\" placeholder=\\\"Department/PSU\\\" [(ngModel)]=\\\"work.ministryOrDepartmentOrPsu\\\">\\n                                        <div *ngIf=\\\"ministryOrDepartmentOrPsu?.touched || ministryOrDepartmentOrPsu?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"ministryOrDepartmentOrPsu.errors?.required\\\">ministry/Department/Psu Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\" *ngIf='central'>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"nameOfPostCentral\\\">Name of Post</label>\\n                                        <input class=\\\"form-control input-md\\\" #nameOfPostCentral=\\\"ngModel\\\" required id=\\\"nameOfPostCentral\\\" name=\\\"nameOfPostCentral\\\"\\n                                            type=\\\"text\\\" placeholder=\\\"Name of Post\\\" [(ngModel)]=\\\"work.nameOfPostCentral\\\">\\n                                        <div *ngIf=\\\"nameOfPostCentral?.touched || nameOfPostCentral?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"nameOfPostCentral.errors?.required\\\">Name Of Post Central is Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"pinCodeCentral\\\">Postal Address-PIN</label>\\n                                        <input class=\\\"form-control input-md\\\" #pinCodeCentral=\\\"ngModel\\\" required pattern=\\\"[0-9]{6}\\\" id=\\\"pinCode\\\" name=\\\"pinCodeCentral\\\"\\n                                            type=\\\"text\\\" placeholder=\\\"Pin Code\\\" [(ngModel)]=\\\"work.pinCodeCentral\\\">\\n                                        <div *ngIf=\\\"pinCodeCentral?.touched || pinCodeCentral?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"pinCodeCentral.errors?.required\\\">Pin-Code Required</div>\\n                                            <div *ngIf=\\\"pinCodeCentral.errors?.pattern\\\">Invalid Pin-Code</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\" *ngIf='central'>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"officeTelCentral\\\">Office Tel</label>\\n                                        <input class=\\\"form-control input-md\\\" #officeTelCentral=\\\"ngModel\\\" required id=\\\"officeTelCentral\\\" name=\\\"officeTelCentral\\\" type=\\\"text\\\"\\n                                            placeholder=\\\"Office Tel\\\" [(ngModel)]=\\\"work.officeTelCentral\\\">\\n                                        <div *ngIf=\\\"officeTelCentral?.touched || officeTelCentral?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"officeTelCentral.errors?.required\\\"> office Tel Required</div>\\n                                            <div *ngIf=\\\"officeTelCentral.errors?.pattern\\\">Invalid office Tel</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"mobileCentral\\\">Mobile</label>\\n                                        <input class=\\\"form-control input-md\\\" #mobileCentral=\\\"ngModel\\\" required minlength=\\\"10\\\" maxlength=\\\"10\\\" pattern=\\\"[0-9]{10}\\\"\\n                                            id=\\\"mobileCentral\\\" name=\\\"mobileCentral\\\" type=\\\"text\\\" placeholder=\\\"Mobile\\\" [(ngModel)]=\\\"work.mobileCentral\\\">\\n                                        <div *ngIf=\\\"mobileCentral?.touched || mobileCentral?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"mobileCentral.errors?.required\\\">Mobile Required</div>\\n                                            <div *ngIf=\\\"mobileCentral.errors?.pattern\\\">Should have 10 Digits</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"emailCentral\\\">Email</label>\\n                                        <input class=\\\"form-control input-md\\\" #emailCentral=\\\"ngModel\\\" required pattern=\\\"^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$\\\" id=\\\"emailCentral\\\"\\n                                            name=\\\"emailCentral\\\" type=\\\"text\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"work.emailCentral\\\">\\n                                        <div *ngIf=\\\"emailCentral?.touched || emailCentral?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"emailCentral.errors?.required\\\">Email Required</div>\\n                                            <div *ngIf=\\\"emailCentral.errors?.pattern\\\">Invalid Email Address</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\" *ngIf='InterState'>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"officeFaxCentral\\\">Office Fax</label>\\n                                        <input class=\\\"form-control input-md\\\" #officeFaxCentral=\\\"ngModel\\\" required id=\\\"officeFaxCentral\\\" name=\\\"officeFaxCentral\\\" type=\\\"text\\\"\\n                                            placeholder=\\\"Office Fax\\\" [(ngModel)]=\\\"work.officeFaxCentral\\\">\\n                                        <div *ngIf=\\\"officeFaxCentral?.touched || officeFaxCentral?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"officeFaxCentral.errors?.required\\\">Office Fax Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"residencePhCentral\\\">Residence Ph</label>\\n                                        <input class=\\\"form-control input-md\\\" #residencePhCentral=\\\"ngModel\\\" required pattern=\\\"[0-9]{11}\\\" id=\\\"residencePhCentral\\\" name=\\\"residencePhCentral\\\"\\n                                            type=\\\"text\\\" placeholder=\\\"Residence Ph\\\" [(ngModel)]=\\\"work.residencePhCentral\\\">\\n                                        <div *ngIf=\\\"residencePhCentral?.touched || residencePhCentral?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"residencePhCentral.errors?.required\\\">Resident Phone Number Required</div>\\n                                            <div *ngIf=\\\"residencePhCentral.errors?.pattern\\\">Invalid Phone Number</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"residenceAddressCentral\\\">Residence Address</label>\\n                                        <textarea class=\\\"form-control input-md\\\" #residenceAddressCentral=\\\"ngModel\\\" required id=\\\"residenceAddressCentral\\\" name=\\\"residenceAddressCentral\\\"\\n                                            type=\\\"text\\\" placeholder=\\\"Residence Address\\\" [(ngModel)]=\\\"work.residenceAddressCentral\\\"></textarea>\\n                                        <div *ngIf=\\\"residenceAddressCentral?.touched || residenceAddressCentral?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"residenceAddressCentral.errors?.required\\\">Resident Address Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\" *ngIf='training'>\\n                                <h4>Training</h4>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"nameOfTraining\\\">Name of Training</label>\\n                                        <input class=\\\"form-control input-md\\\" #nameOfTraining=\\\"ngModel\\\" required id=\\\"nameOfTraining\\\" name=\\\"nameOfTraining\\\" type=\\\"text\\\"\\n                                            placeholder=\\\"Name of Training\\\" [(ngModel)]=\\\"work.nameOfTraining\\\">\\n                                        <div *ngIf=\\\"nameOfTraining?.touched || nameOfTraining?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"nameOfTraining.errors?.required\\\"> Name Of Training Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"trainingDuration\\\">Training Duration</label>\\n                                        <input class=\\\"form-control input-md\\\" #trainingDuration=\\\"ngModel\\\" required id=\\\"trainingDuration\\\" name=\\\"trainingDuration\\\" type=\\\"text\\\"\\n                                            placeholder=\\\"Duration\\\" [(ngModel)]=\\\"work.trainingDuration\\\">\\n                                        <div *ngIf=\\\"trainingDuration?.touched || trainingDuration?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"trainingDuration.errors?.required\\\">Training Duration Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"trainingPlace\\\">Training Place</label>\\n                                        <input class=\\\"form-control input-md\\\" #trainingPlace=\\\"ngModel\\\" required id=\\\"trainingPlace\\\" name=\\\"trainingPlace\\\" type=\\\"text\\\"\\n                                            placeholder=\\\"Place\\\" [(ngModel)]=\\\"work.trainingPlace\\\">\\n                                        <div *ngIf=\\\"trainingPlace?.touched || trainingPlace?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"trainingPlace.errors?.required\\\">Training PlaceRequired</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\" *ngIf='leave'>\\n                                <h4>Leave</h4>\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"dateOfStartingLeave\\\">Date of starting leave</label>\\n                                        <input class=\\\"form-control input-md\\\" #dateOfStartingLeave=\\\"ngModel\\\" required id=\\\"dateOfStartingLeave\\\" name=\\\"dateOfStartingLeave\\\"\\n                                            type=\\\"date\\\" placeholder=\\\"Date of starting leave\\\" [(ngModel)]=\\\"work.dateOfStartingLeave\\\">\\n                                        <div *ngIf=\\\"dateOfStartingLeave?.touched || dateOfStartingLeave?.dirty\\\" class=\\\"alert alert-danger\\\">\\n                                            <div *ngIf=\\\"dateOfStartingLeave.errors?.required\\\">Date of starting leave Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group text-center space-20\\\">\\n                        <!-- <button class=\\\"btn btn-outline-rounded btn-default\\\" (click)=\\\"goToPrevious(workForm)\\\"> <span style=\\\"margin-right:10px;\\\" class=\\\"glyphicon glyphicon-arrow-left\\\"></span> Previous</button> -->\\n                        <button class=\\\"btn btn-outline-rounded btn-info\\\" [disabled]=\\\"!workForm.valid\\\" (click)=\\\"goToNext(workForm)\\\"> Submit\\n                            <span style=\\\"margin-left:10px;\\\" class=\\\"glyphicon glyphicon-arrow-right\\\"></span>\\n                        </button>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Work } from '../data/formData.model';\nimport { ProfileService } from '../shared/profile.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n\n\n@Component({\n    selector: 'mt-wizard-work'\n    , templateUrl: './work.component.html'\n})\n\nexport class WorkComponent implements OnInit {\n\n    baseUrl = environment.baseUrl;\n    title = 'Work';\n    private work: Work = new Work();\n    form: any;\n    workState: boolean;\n    central: boolean;\n    InterState: boolean;\n    training: boolean;\n    leave: boolean;\n    selectedPrefix: any = '';\n    selectedCombo: any = '';\n    private headers = new HttpHeaders().set('Content-Type', 'application/json');\n    Grade: any[];\n    Service: any[];\n    isGrade: any[];\n    Position: any[];\n    Recruitment: any[];\n    isRecruitment: any[];\n    State: any[];\n    Cadre: any[];\n\n    constructor(private router: Router, private _profileService: ProfileService, private http: HttpClient) {\n    }\n\n    ngOnInit() {\n\n        this.workState = false;\n        this.central = false;\n        this.InterState = false;\n        this.training = false;\n        this.leave = false;\n        const id = sessionStorage.getItem('userId');\n        if (!id) {\n            this.router.navigate(['/login']);\n        }\n        this.readWork(id);\n        this.getGradeCombo();\n        this.getServiceCombo();\n        this.getPositionCombo();\n        this.getRecruitmentCombo();\n        this.getStateCombo();\n        this.getCadreCombo();\n\n    }\n    getCadreCombo(){\n        this.http.get<any>(`${this.baseUrl}/api/Cadres`, { headers: this.headers })\n        .subscribe(res => {\n            this.Cadre = res;\n        },\n            err => {\n                alert('error while getiing prefix');\n            });\n\n    }\n    getStateCombo() {\n        this.http.get<any>(`${this.baseUrl}/api/States`, { headers: this.headers })\n            .subscribe(res => {\n                this.State = res;\n            },\n                err => {\n                    alert('error while getiing prefix');\n                });\n    }\n\n    getGradeCombo() {\n        this.http.get<any>(`${this.baseUrl}/api/Grades`, { headers: this.headers })\n            .subscribe(res => {\n                this.Grade = res;\n            },\n                err => {\n                    alert('error while getiing prefix');\n                });\n    }\n    getServiceCombo() {\n        this.http.get<any>(`${this.baseUrl}/api/Services`, { headers: this.headers })\n            .subscribe(res => {\n                this.Service = res;\n            },\n                err => {\n                    alert('error while getiing prefix');\n                });\n    }\n    getPositionCombo() {\n        this.http.get<any>(`${this.baseUrl}/api/Positions`, { headers: this.headers })\n            .subscribe(res => {\n                this.Position = res;\n            },\n                err => {\n                    alert('error while getiing prefix');\n                });\n    }\n    getRecruitmentCombo() {\n        this.http.get<any>(`${this.baseUrl}/api/Recruitments`, { headers: this.headers })\n            .subscribe(res => {\n                this.Recruitment = res;\n\n            },\n                err => {\n                    alert('error while getiing prefix');\n                });\n    }\n    readWork(id) {\n        this._profileService\n            .readWork(id)\n            .subscribe(data => {\n                if (!data) {\n                    this.work = new Work();\n                }\n                else {\n                    this.work = data;\n                }\n            }, err => {\n                alert('failed');\n            })\n    }\n\n    save(form: any): any {\n        if (!form.valid) {\n            return false;\n        }\n        const id = sessionStorage.getItem('userId');\n        this._profileService.createWork(id, this.work).subscribe(\n            data => {\n                console.log(data);\n            }, err => {\n                console.log(err);\n            }\n        )\n        return true;\n    }\n\n    goToNext(form: any) {\n        if (this.save(form)) {\n            // Navigate to the work page\n            this.router.navigate(['/dependants']);\n        }\n    }\n\n\n    selectComboHandler(event: any) {\n        this.selectedCombo = event.target.value;\n        if (this.selectedCombo == 'IAS') {\n            this.isRecruitment = [];\n            this.isGrade = [];\n            for (var i = 0; i < 3; i++) {\n                this.isRecruitment.push(this.Recruitment[i]);\n\n            }\n            for (var i = 0; i < 7; i++) {\n                this.isGrade.push(this.Grade[i]);\n            }\n\n        } else if (this.selectedCombo == 'IPS') {\n            this.isRecruitment = [];\n            this.isGrade = [];\n            this.isRecruitment.push(this.Recruitment[0]);\n            this.isRecruitment.push(this.Recruitment[3])\n        for (var i = 0; i < 12; i++) {\n                if(i==4 ||i==5 ||i==6 ){}\n                \n            else {\n                this.isGrade.push(this.Grade[i]);\n            }\n        }\n        } else if (this.selectedCombo == 'IFS') {\n            this.isRecruitment = [];\n            this.isGrade = [];\n            this.isRecruitment.push(this.Recruitment[0]);\n            this.isRecruitment.push(this.Recruitment[4]);\n        for (var i = 0; i < 17; i++) {\n                if(i==4 ||i==5 ||i==6 ||i==7 \n                    ||i==8 ||i==9 ||i==10 ||i==11 ){}\n                \n            else {\n                this.isGrade.push(this.Grade[i]);\n            }\n        }    \n\n        }\n    }\n\n\n    selectChangeHandler(event: any) {\n        this.selectedPrefix = event.target.value;\n        /*alert(this.selectedPrefix);*/\n        if (this.selectedPrefix == 'Cadre') {\n            this.central = false;\n            this.InterState = false;\n            this.training = false;\n            this.leave = false;\n            this.workState = true;\n        } else if (this.selectedPrefix == 'Central Deputation') {\n            this.central = true;\n            this.InterState = false;\n            this.training = false;\n            this.leave = false;\n            this.workState = false;\n        } else if (this.selectedPrefix == 'Ex-cadre') {\n            this.workState = true;\n            this.central = false;\n            this.InterState = false;\n            this.training = false;\n            this.leave = false;\n        } else if (this.selectedPrefix == 'Inter-cadre Deputation') {\n            this.workState = false;\n            this.central = false;\n            this.InterState = true;\n            this.training = false;\n            this.leave = false;\n        } else if (this.selectedPrefix == 'Foreign Assignment') {\n            this.InterState = true;\n            this.workState = false;\n            this.central = false;\n            this.training = false;\n            this.leave = false;\n        } else if (this.selectedPrefix == 'Training') {\n            this.InterState = false;\n            this.workState = false;\n            this.central = false;\n            this.training = true;\n            this.leave = false;\n        } else if (this.selectedPrefix == 'State Deputation') {\n            this.InterState = false;\n            this.workState = false;\n            this.central = false;\n            this.training = false;\n            this.leave = false;\n        } else if (this.selectedPrefix == 'Constitutional') {\n            this.InterState = false;\n            this.workState = false;\n            this.central = false;\n            this.training = false;\n            this.leave = false;\n        }\n\n    }\n}","import { Injectable } from '@angular/core';\nimport {\n    CanActivate, Router,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    CanLoad, Route\n} from '@angular/router';\n\nimport { WorkflowService } from './workflow.service';\n\n@Injectable()\nexport class WorkflowGuard implements CanActivate {\n    constructor(private router: Router, private workflowService: WorkflowService) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        let path: string = route.routeConfig.path;\n\n        return this.verifyWorkFlow(path);\n    }\n\n    verifyWorkFlow(path) : boolean {\n        console.log(\"Entered '\" + path + \"' path.\");\n\n        // If any of the previous steps is invalid, go back to the first invalid step\n        let firstPath = this.workflowService.getFirstInvalidStep(path);\n        if (firstPath.length > 0) {\n            console.log(\"Redirected to '\" + firstPath + \"' path which it is the first invalid step.\");\n            let url = `/${firstPath}`;\n            this.router.navigate([url]);\n            return false;\n        };\n\n        return true;\n    }\n}\n","export const STEPS = {\n    personal: 'personal',\n    work: 'work',\n    education: 'education',\n    spouse: 'spouse',\n    dependants: 'dependants',\n    // result: 'result'\n}\n","import { Injectable }         from '@angular/core';\n\nimport { STEPS }              from './workflow.model';\n\n@Injectable()\nexport class WorkflowService {\n    private workflow = [\n        { step: STEPS.personal, valid: true },\n        { step: STEPS.work, valid: true },\n        { step: STEPS.education, valid: true },\n        { step: STEPS.spouse, valid: true },\n        { step: STEPS.dependants, valid: true },\n        // { step: STEPS.result, valid: true }\n    ];\n    \n    validateStep(step: string) {\n        // If the state is found, set the valid field to true \n        var found = false;\n        for (var i = 0; i < this.workflow.length && !found; i++) {\n            if (this.workflow[i].step === step) {\n                found = this.workflow[i].valid = true;\n            }\n        }\n    }\n\n    resetSteps() {\n        // Reset all the steps in the Workflow to be invalid\n        this.workflow.forEach(element => {\n            element.valid = false;\n        });\n    }\n\n    getFirstInvalidStep(step: string) : string {\n        // If all the previous steps are validated, return blank\n        // Otherwise, return the first invalid step\n        var found = false;\n        var valid = true;\n        var redirectToStep = '';\n        for (var i = 0; i < this.workflow.length && !found && valid; i++) {\n            let item = this.workflow[i];\n            if (item.step === step) {\n                found = true;\n                redirectToStep = '';\n            }\n            else {\n                valid = item.valid;\n                redirectToStep = item.step\n            }\n        }\n        return redirectToStep;\n    }\n}","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: ''\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}